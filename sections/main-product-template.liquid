<script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>

{% assign margin = section.settings.margin | split: ',' %}
{% assign margin_top = margin[0] %}
{% assign margin_bottom = margin[1] %}
{% assign padding = section.settings.padding | split: ',' %}
{% assign padding_top = padding[0] %}
{% assign padding_bottom = padding[1] %}
{% assign current_variant = product.selected_or_first_available_variant %}

<div class="{% render 'container-settings' %}">
  <!-- OUTER PADDING/MARGIN WRAPPER (controlled by settings: padding/margin) -->
  <div class="outer-pad-{{ section.id }}">
    <!-- Inner background wrapper (card) -->
    <div class="inner-bg-{{ section.id }}">
      <div class="row {% for block in section.blocks -%}{%- case block.type -%}{%- when 'fbt' -%} fbt_hide_primary_cart_btn{%- endcase -%}{%- endfor -%}">
        <div class="{{settings.product_page_sidebar}} {% if settings.product_page_sidebar == 'full-width' %} no-sidebar {% else %}has-sidebar{% endif  %}">
          <div class="product-template-content">
            <div class="text-center sidebar_btn">
              <button type="button" class="toggleIcon {% if settings.product_sidebar_mobile %} hidden {% endif %}" aria-label="Toggle sidebar">
                <i class="fa fa-caret-right" aria-hidden="true"></i>
              </button>
            </div>

            {%- assign product_thumb_size = '160x160' -%}
            {%- assign enable_zoom = section.settings.enable_zoom -%}
            {%- assign product_image_width = 'product_image_width' -%}
            {%- assign product_images_length = product.media | size -%}

            <div class="product-page-row">
              <!-- ===================== UPDATED GALLERY START (mobile: swipe + dots) ===================== -->
              <div class="product_images_length-{{product_images_length}} {{ product_image_width }} product-gallery-{{ section.id }}" id="product-gallery" data-zoom-method="{{ section.settings.zoom_type }}">
                <div class="product-media product-media-{{ section.id }}">
                  {%- assign initial_media = product.selected_or_first_available_variant.featured_media | default: product.featured_media -%}

                  <!-- MOBILE / TABLET SCROLLER (visible < 992px) -->
                  <div class="media-scroller" id="MediaScroller-{{ section.id }}" aria-label="Product media gallery" tabindex="0">
                    {%- for media in product.media -%}
                      <div class="media-slide{% if media.id == initial_media.id %} is-initial{% endif %}" data-media-id="{{ media.id }}" data-index="{{ forloop.index0 }}" role="group" aria-roledescription="slide" aria-label="{{ forloop.index }} of {{ product.media.size }}">
                        {%- case media.media_type -%}
                          {%- when 'image' -%}
                            {{ media | image_url: width: 1600 | image_tag:
                              loading: 'lazy',
                              sizes: '(min-width: 992px) 700px, 100vw',
                              widths: '700,900,1200,1600',
                              class: 'media-slide__img' }}
                          {%- when 'video' -%}
                            {{ media | video_tag: controls: true, class: 'media-slide__video' }}
                          {%- when 'external_video' -%}
                            {{ media | external_video_tag: class: 'media-slide__video' }}
                          {%- when 'model' -%}
                            {{ media | model_viewer_tag: class: 'media-slide__model' }}
                        {%- endcase -%}
                      </div>
                    {%- endfor -%}
                  </div>

                  <!-- DOTS for MOBILE -->
                  <div class="media-dots" id="MediaDots-{{ section.id }}" role="tablist" aria-label="Select product media (pagination dots)"></div>

                  <!-- DESKTOP THUMBNAILS (visible ≥ 992px) -->
                  <div class="product-media__thumbs desktop-thumbs" role="list" aria-label="Product media thumbnails">
                    {%- for media in product.media -%}
                      <button
                        type="button"
                        class="product-media__thumb{% if media.id == initial_media.id %} is-active{% endif %}"
                        role="listitem"
                        aria-current="{% if media.id == initial_media.id %}true{% else %}false{% endif %}"
                        data-media-id="{{ media.id }}"
                        data-media-type="{{ media.media_type }}"
                        aria-label="Show media {{ forloop.index }}"
                        {% if media.media_type == 'image' %}
                          data-full="{{ media | image_url: width: 1600 }}"
                          data-srcset="{{ media | image_url: width: 700 }} 700w, {{ media | image_url: width: 900 }} 900w, {{ media | image_url: width: 1200 }} 1200w, {{ media | image_url: width: 1600 }} 1600w"
                          data-sizes="(min-width: 992px) 700px, 100vw"
                          data-ar="{{ media.preview_image.aspect_ratio | default: 1 }}"
                        {% endif %}
                      >
                        {{ media | image_url: width: 240 | image_tag: loading: 'lazy', widths: '120,160,240', class: 'product-media__thumb-img' }}
                        {%- if media.media_type == 'video' or media.media_type == 'external_video' -%}
                          <span class="product-media__thumb-badge" aria-hidden="true">▶</span>
                        {%- elsif media.media_type == 'model' -%}
                          <span class="product-media__thumb-badge" aria-hidden="true">3D</span>
                        {%- endif -%}
                      </button>
                    {%- endfor -%}
                  </div>

                  <!-- DESKTOP MAIN STAGE (kept for SEO/structure; hidden on mobile) -->
                  <div class="product-media__main desktop-stage" id="FeaturedMedia-{{ section.id }}" data-current-media-id="{{ initial_media.id }}">
                    {%- if initial_media.media_type == 'image' -%}
                      {{ initial_media | image_url: width: 1600 | image_tag:
                          loading: 'eager',
                          fetchpriority: 'high',
                          sizes: '(min-width: 992px) 700px, 100vw',
                          widths: '700,900,1200,1600',
                          class: 'product-media__img' }}
                    {%- elsif initial_media.media_type == 'video' or initial_media.media_type == 'external_video' -%}
                      {{ initial_media | video_tag: controls: true, class: 'product-media__video' }}
                    {%- elsif initial_media.media_type == 'model' -%}
                      {{ initial_media | model_viewer_tag: class: 'product-media__model' }}
                    {%- endif -%}
                  </div>
                </div>
              </div>
              <!-- ===================== UPDATED GALLERY END ===================== -->

              <div class="product-description-product-template product-description-{{ section.id }} sidebar-sticky" id="product-description">
                <div class="product-item-caption-white sidebar_{{ section.id }}" id="sidebar">
                  <div class="product-meta-block">
                    {%- for block in section.blocks -%}
                      {%- case block.type -%}
                        {%- when '@app' -%}
                          {% render block %}

                        {%- when 'title' -%}
                          <h3 class="product-title">{{ product.title | escape }}</h3>

                        {%- when 'price' -%}
                          <div class="product-price">
                            <p class="product-price-label product-label">{{ "products.product.price" | t }}</p>
                            <ul class="price-list">
                              <li id="ProductPrice-{{ section.id }}" class="product-price-current">
                                <span class="money" data-price-cents="{{ current_variant.price }}">{{ current_variant.price | money }}</span>
                              </li>
                              <li id="ComparePrice-{{ section.id }}" class="product-price-list">
                                <span class="money">
                                  {% if current_variant.compare_at_price > current_variant.price %}
                                    {{ current_variant.compare_at_price | money }}
                                  {% endif %}
                                </span>
                              </li>
                            </ul>

                            <div class="unitPrice-{{ section.id }}">
                              {%- capture unit_price_separator -%}<span aria-hidden="true">/</span>{%- endcapture -%}
                              {%- capture unit_price_base_unit -%}
                                <span data-unit-price-base-unit>
                                  {%- if current_variant.unit_price_measurement -%}
                                    {%- if current_variant.unit_price_measurement.reference_value != 1 -%}
                                      {{- current_variant.unit_price_measurement.reference_value -}}
                                    {%- endif -%}
                                    {{ current_variant.unit_price_measurement.reference_unit }}
                                  {%- endif -%}
                                </span>
                              {%- endcapture -%}

                              {%- if current_variant.unit_price_measurement -%}
                                {{ current_variant.unit_price | money }}{{- unit_price_separator -}}{{- unit_price_base_unit -}}
                              {%- endif -%}
                            </div>
                          </div>

                        {%- when 'short_text' -%}
                          {%- if product.metafields.my_fields.short_description != blank -%}
                            <div class="product-attributes">
                              {{ product.metafields.my_fields.short_description }}
                            </div>
                          {%- endif -%}

                        {%- when 'text' -%}
                          <div class="product-item-caption-desc product-rte-description">
                            <p>{{- block.settings.text -}}</p>
                          </div>

                        {%- when 'deal' -%}
                          {% render 'deal-snippet', productID: product.id %}
                      {% endcase %}
                    {% endfor %}
                  </div>

                  {% if section.settings.show_adv_product %}
                    {% if section.settings.choose_label != blank %}
                      <p class="advanced-title">
                        {{ section.settings.choose_label }}:
                        {% assign words = product.title | split: ' ' %}
                        {{ words | last }}
                        {% assign firstWord = words | last %}
                      </p>
                    {% endif %}
                    <div data-section-type="advanced-product-link-section">
                      <div class="dT_vDynamicPWrap-{{ section.id }} dT_vProdWrap">
                        <ul class="adv-product-list">
                          {% assign swiperSlideClass = "carousel-block-list" %}
                          {% assign block_collection = collections[section.settings.collection] %}
                          {% for product in block_collection.products limit: 3 %}
                            {% include 'adv-product-grid-item', product: product, swiperSlideClass: swiperSlideClass %}
                          {% endfor %}
                        </ul>
                      </div>
                    </div>
                  {% endif %}

                  {% capture product_form_config %}
                  {
                    "money_format": {{ shop.money_format | json }},
                    "enable_history": true,
                    "sold_out": {{ "products.product.sold_out" | t | json }},
                    "button": {{ 'products.product.add_to_cart' | t | json }},
                    "unavailable": {{ 'products.product.unavailable' | t | json }}
                  }
                  {% endcapture %}

                  {% form 'product', product, data-product-form:product_form_config %}
                    {{ form | payment_terms }}

                    {% if section.settings.show_variants_swatches %}
                      <style>.product-select-block-{{ section.id }}{display:none;}</style>
                    {% endif %}

                    <div class="product-item-caption-select product-select-block-{{ section.id }} {% if section.settings.show_variants_swatches %} hidden {% endif %}">
                      {% unless product.options.size == 1 and product.variants[0].title contains 'Default' and product.variants.size == 1 %}
                        {% for option in product.options_with_values %}
                          <div class="selector-wrapper main-product-select-{{product.id}}">
                            <label {% if option.name == 'default' %}class="hidden"{% endif %} for="product-select-{{ option.name }}">{{ option.name }}</label>
                            <select class="single-option-selector" id="SingleOptionSelector-{{ forloop.index0 }}">
                              {% for value in option.values %}
                                <option {% if option.selected_value == value %}selected{% endif %}>{{ value }}</option>
                              {% endfor %}
                            </select>
                          </div>
                        {% endfor %}
                      {% endunless %}

                      <select name="id" id="ProductSelect-{{ product.id }}" data-section="{{ section.id }}" class="product-form__variants hidden">
                        {% for variant in product.variants %}
                          {% if variant.available %}
                            <option
                              {% if section.settings.show_product_quantity %}
                                data-inventory_management="{{variant.inventory_management}}"
                                data-inventory_policy="{{variant.inventory_policy}}"
                                data-inventory_quantity="{{variant.inventory_quantity}}"
                              {% endif %}
                              {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %}
                              data-sku="{{ variant.sku }}"
                              value="{{ variant.id }}"
                            >{{ variant.title | escape }}</option>
                          {% else %}
                            <option
                              disabled="disabled"
                              {% if section.settings.show_product_quantity %}
                                data-inventory_management="{{variant.inventory_management}}"
                                data-inventory_policy="{{variant.inventory_policy}}"
                                data-inventory_quantity="{{variant.inventory_quantity}}"
                                value="{{ variant.id }}"
                              {% endif %}
                            >{{ variant.title | escape }} - {{ 'products.product.sold_out' | t }}</option>
                          {% endif %}
                        {% endfor %}
                      </select>
                    </div>

                    {% if section.settings.show_variants_swatches %}
                      {% unless product.options.size == 1 and product.variants[0].title contains 'Default' and product.variants.size == 1 %}
                        {% for option in product.options %}
                          {% render 'swatch' with option %}
                        {% endfor %}
                      {% endunless %}
                    {% endif %}

                    <!-- ================= SUBTOTAL (now with ID + ignore hooks) ================= -->
                    <div class="sub-total">
                      <p class="product-label">{{ 'products.product.total' | t }}</p>
                      <strong
                        id="Subtotal-{{ section.id }}"
                        data-subtotal
                        data-cents="{{ current_variant.price }}"
                        data-currency="ignore"
                        data-glc="ignore"
                        class="no-glc"
                      >
                        {{ current_variant.price | money }}
                      </strong>
                    </div>
                    <!-- ===================================================================== -->

                    {% if section.settings.show_product_quantity %}
                      <div id="inventory-product" class="product-attributes inventory-product-{{section.id }} attributes-hidden">
                        <p class="product-label">{{ 'products.product.availability' | t }}</p>
                        <span id="variant-inventory" class="variant-inventory-{{section.id }}"></span>
                      </div>
                    {% endif %}

                    {% if section.settings.show_quantity_selector %}
                      <div class="product-attributes dt-sc-qty">
                        <p class="product-label">{{ 'products.product.quantity' | t }}</p>
                        <div class="quantity product-form__item product-form__item--quantity product-item-caption-qty" data-qty>
                          <button class="quantity-btn quantity-btn-minus btn-number btn-number-{{ section.id }}" type="button" data-type="minus" aria-label="Decrease quantity">&#45;</button>
                          <input type="text" id="Quantity-{{ section.id }}" name="quantity" value="1" class="quantity-btn-number form-control input-number input-number-{{ section.id }} product-form__input" inputmode="numeric" pattern="[0-9]*" aria-label="Quantity">
                          <button class="quantity-btn quantity-btn-plus btn-number btn-number-{{ section.id }}" type="button" data-type="plus" aria-label="Increase quantity">&#43;</button>
                        </div>
                      </div>
                    {% endif %}

                    <div class="product-form__item product-form__item--submit product_payments_btns">
                      {% unless section.settings.hide_addtocart %}
                        <button type="submit"
                                name="add"
                                id="AddToCart-{{ section.id }}"
                                class="product-form__submit button {% if product.options.size == 1 and product.variants[0].title == 'Default Title' and product.variants.size == 1 %} product-form__cart-submit--small{% endif %}">
                          {{ 'products.product.add_to_cart' | t }}
                        </button>
                      {% endunless %}

                      {% if section.settings.show_wishlist %}
                        <div class="dT_VProdWishList">
                          {%- if product.handle != blank -%}
                            <div>
                              <dtx-wishlist>
                                <a href="javascript:void(0);" class="add-wishlist" data-product_handle="{{ product.handle }}">
                                  <span class="visually-hidden">Add to wishlist</span>
                                </a>
                              </dtx-wishlist>
                            </div>
                          {%- endif -%}
                        </div>
                      {% endif %}

                      {% if section.settings.show_checkout %}
                        {{ form | payment_button }}
                      {% endif %}
                    </div>
                  {% endform %}

                  <div
                    class="product-inventory-availability"
                    data-inventory-availability
                    data-product-title="{{ product.title | escape }}"
                    data-has-only-default-variant="{{ product.has_only_default_variant }}"
                    data-base-url="{{ shop.url }}{{ routes.root_url }}"
                  ></div>

                  {%- for block in section.blocks -%}
                    {%- case block.type -%}
                      {%- when 'notify-form' -%}
                        {% include 'notify-form', product: product %}
                      {%- when 'badge' -%}
                        {% if block.settings.image != blank %}
                          <div class="secure-badges">
                            <p class="badge-label">{{ block.settings.badge_label }}</p>
                            <img src="{{ block.settings.image | img_url: 'master' }}" alt="{{ block.settings.image.alt }}" />
                          </div>
                        {% endif %}
                      {%- when 'social-sharing' -%}
                        {% assign share_url = product.selected_or_first_available_variant.url | default: product.url | prepend: request.origin %}
                        {% render 'product-share-button', share_url: share_url %}
                    {% endcase %}
                  {% endfor %}

                  {%- if settings.enable_fake_visitors -%}
                    {% render 'fake-visitors' %}
                  {%- endif -%}
                  {%- if settings.enable_fake_sales -%}
                    {% render 'social-proof-sales' %}
                  {%- endif -%}

                  {%- if section.settings.tab_position == "right" -%}
                    <div class="product-tab">
                      {% render 'product-tab' %}
                    </div>
                  {%- endif -%}
                </div>
              </div>
            </div> <!-- /product-page-row -->

            {%- if section.settings.tab_position == "bottom" -%}
              <div class="product-tab">
                {% render 'product-tab' %}
              </div>
            {%- endif -%}
          </div>
        </div>

        {%- unless settings.product_page_sidebar == "full-width" -%}
          <div class="sidebar sidebar-sticky" sidebar-sticky>
            {% include 'product-sidebar' %}
          </div>
        {%- endunless -%}
      </div>
    </div> <!-- /inner-bg-{{ section.id }} -->
  </div> <!-- /outer-pad-{{ section.id }} -->
</div>

{% render 'dT_product_bundle' %}
{% if section.settings.enable_enquiry %}
  {% render 'enquiry-form' %}
{% endif %}

{%- for block in section.blocks -%}
  {%- case block.type -%}
    {%- when 'size_chart' -%}
      {% if product.options contains 'Size' %}
        {% render 'size-chart' %}
      {% endif %}
  {% endcase %}
{% endfor %}

{% unless product.empty? %}
  <script type="application/json" id="ProductJson-{{ section.id }}">{{ product | json }}</script>
  <script type="application/json" id="ModelJson-{{ section.id }}">{{ product.media | where: 'media_type', 'model' | json }}</script>
  <script type="application/json" id="ProductTemplate-{{ product.id }}">{ "template": "product-template" } </script>

  {% if section.settings.enable_sticky_cart %}
    {% render 'sticky_cart' %}
  {% endif %}
{% endunless %}

<style>
  .shopify-payment-button__button--unbranded {
    background: #ff679a !important;
    color: white !important;
  }
  .product-item-caption-qty input.input-number, .cart_table .qty-box-set .quantity-selector { border:none; }
  .template-product .product_payments_btns button,
  .template-product .product_payments_btns .dt-sc-btn,
  .template-product .product-form__item--submit button {
    background:#2d0288; color: white;
  }
  .dt-sc-qty { gap: 16px; }
  .StickySidebar { color: #881d3e; }
  .dt-sc-accordion-container .dt-sc-accordion-btn { background: none; border-bottom: 2px solid #881d3e; }

  /* -------- Section Background (full width) -------- */
  #shopify-section-{{ section.id }}.main-product-template {
    background: {{ section.settings.section_bg_color | default: 'transparent' }};
    position: relative;
  }

  /* -------- OUTER PADDING / MARGIN -------- */
  .outer-pad-{{ section.id }} {
    margin-top: {{ margin_top | default: 0 }}px;
    margin-bottom: {{ margin_bottom | default: 0 }}px;
    padding-top: {{ padding_top | default: 0 }}px;
    padding-bottom: {{ padding_bottom | default: 0 }}px;
  }
  @media only screen and (max-width: 1199px) {
    .outer-pad-{{ section.id }} {
      margin-top: {{ margin_top | divided_by: 2 | default: 0 }}px;
      margin-bottom: {{ margin_bottom | divided_by: 2 | default: 0 }}px;
      padding-top: {{ padding_top | divided_by: 2 | default: 0 }}px;
      padding-bottom: {{ padding_bottom | divided_by: 2 | default: 0 }}px;
    }
  }

  /* -------- Inner Card Background & Padding -------- */
  .inner-bg-{{ section.id }}{
    background: {{ section.settings.inner_bg_color | default: 'transparent' }};
    border-radius: {{ section.settings.inner_bg_radius | default: 0 }}px;
    padding: {{ section.settings.inner_bg_padding | default: 0 }}px;
  }

  /* Decorative images (behind content) */
  #shopify-section-{{section.id}}.main-product-template:before{
    content: " ";
    position: absolute;
    width:504px; height:768px;
    {% if section.settings.before_image != blank %}
      background-image:url({{ section.settings.before_image | img_url:'master' }});
    {% endif %}
    background-size: auto; background-repeat: no-repeat; background-position: left top;
    top:-250px; left:0;
    animation: dt-swing ease-in-out 2s infinite alternate;
    pointer-events: none; z-index: -1;
  }
  #shopify-section-{{section.id}}.main-product-template:after{
    content: " ";
    position: absolute;
    width:240px; height:534px;
    {% if section.settings.after_image != blank %}
      background-image:url({{ section.settings.after_image | img_url:'master' }});
    {% endif %}
    background-size: auto; background-repeat: no-repeat; background-position: left bottom;
    bottom:0; left:0;
    animation: dt-swing ease-in-out 2s infinite alternate;
    pointer-events: none; z-index: -1;
  }

  #shopify-product-reviews .spr-container *{color:var(--DT_Blog_Button_Text_Color);}
  .spr-form-input-text, .spr-form-input-email, .spr-form-input-textarea{color:var(--DT_Blog_Button_Text_Color);background:transparent !important;border-color:var(--DT_Blog_Button_Text_Color) !important;}
  .template-product .swatch .swatch-element.not_color label{border-color:var(--DT_Blog_Button_Text_Color) }

  /* Layering */
  #shopify-section-{{section.id}} .product-page-row,
  #shopify-section-{{section.id}} .product-gallery-{{ section.id }}{ position: relative; z-index: 1; }

  /* ================= SIMPLE PRODUCT GALLERY (SECTION-SCOPED) ================= */
  #shopify-section-{{ section.id }} .product-media { display: grid; gap: 12px; }

  /* Desktop stage and thumbs visibility */
  #shopify-section-{{ section.id }} .desktop-stage { display: none; }
  #shopify-section-{{ section.id }} .desktop-thumbs { display: none; }
  @media (min-width: 992px){
    #shopify-section-{{ section.id }} .desktop-stage { display: block; }
    #shopify-section-{{ section.id }} .desktop-thumbs { display: grid; grid-auto-flow: column; grid-auto-columns: minmax(64px, 96px); gap: 8px; overflow: auto; padding-bottom: 2px; }
    #shopify-section-{{ section.id }} .media-scroller, #shopify-section-{{ section.id }} .media-dots { display: none; }
  }

  /* Mobile/Tablet scroller */
  #shopify-section-{{ section.id }} .media-scroller{
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 100%;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    gap: 0;
    -webkit-overflow-scrolling: touch;
    border-radius: 12px;
    background: transparent;
  }
  #shopify-section-{{ section.id }} .media-slide{
    position: relative;
    scroll-snap-align: center;
    aspect-ratio: 1 / 1;
    display: grid;
    place-items: center;
  }
  #shopify-section-{{ section.id }} .media-slide__img,
  #shopify-section-{{ section.id }} .media-slide__video,
  #shopify-section-{{ section.id }} .media-slide__model{
    width: 100%; height: 100%; object-fit: contain; display: block;
  }

  /* Dots */
  #shopify-section-{{ section.id }} .media-dots{
    display: flex; justify-content: center; gap: 8px; padding: 8px 0 2px;
  }
  #shopify-section-{{ section.id }} .media-dot{
    width: 8px; height: 8px; border-radius: 999px; background: rgba(0,0,0,.25);
    border: 0; padding: 0; cursor: pointer;
  }
  #shopify-section-{{ section.id }} .media-dot[aria-selected="true"]{
    background: #2D0288;
    width: 22px; /* pill when active */
    transition: width .2s ease;
  }

  /* Desktop thumbnails styling (unchanged, scoped) */
  #shopify-section-{{ section.id }} .product-media__thumb{
    position: relative; border: 1px solid rgba(0,0,0,0.08); background: transparent; padding: 0; border-radius: 8px; cursor: pointer; line-height: 0; transition: transform .15s ease, border-color .15s ease;
  }
  #shopify-section-{{ section.id }} .product-media__thumb:focus-visible { outline: 2px solid #2D0288; outline-offset: 2px; }
  #shopify-section-{{ section.id }} .product-media__thumb:hover { transform: translateY(-1px); }
  #shopify-section-{{ section.id }} .product-media__thumb.is-active { border-color: #ff679a; }
  #shopify-section-{{ section.id }} .product-media__thumb-img{ width: 100%; height: 100%; object-fit: cover; aspect-ratio: 1/1; border-radius: 8px; display: block; }
  #shopify-section-{{ section.id }} .product-media__thumb-badge{
    position: absolute; right: 6px; bottom: 6px; font-size: 12px; line-height: 1; padding: 3px 6px; border-radius: 6px; background: rgba(0,0,0,.65); color: #fff;
  }

  /* Prevent zero-height flashes */
  #product-gallery .product-item-wrap{ min-height: 360px; }
  @media (max-width: 767px){ #product-gallery .product-item-wrap{ min-height: 280px; } }

  @keyframes dt-swing { 0% { transform: translateY(15px); } 100% { transform: translateY(-15px); } }

  /* --- Keep desktop stage from shrinking on swap + reserve AR and fade-in --- */
  #shopify-section-{{ section.id }} .desktop-stage {
    width: 100%;
    aspect-ratio: var(--stage-ar, 1 / 1);
    position: relative;
  }
  #shopify-section-{{ section.id }} .desktop-stage .product-media__img {
    width: 100%;
    height: auto;
    display: block;
    object-fit: contain;
    border-radius: 12px;
    opacity: 1;
    transition: opacity .18s ease;
  }
  #shopify-section-{{ section.id }} .desktop-stage .product-media__img.is-entering {
    opacity: 0;
  }
  #shopify-section-{{ section.id }} .desktop-stage .product-media__img.is-entering.is-ready {
    opacity: 1;
  }
</style>

{%- comment -%} Mobile full-width container + Accordion line style (overrides) {%- endcomment -%}
<style>
@media (max-width: 767px){
  #shopify-section-{{ section.id }} [class*="container"]{
    width: 100% !important; max-width: none !important; padding-left: 0 !important; padding-right: 0 !important;
  }
  #shopify-section-{{ section.id }} .row{ margin-left: 0 !important; margin-right: 0 !important; }
  #shopify-section-{{ section.id }} .outer-pad-{{ section.id }}{ padding-left: 0 !important; padding-right: 0 !important; }
  #shopify-section-{{ section.id }} .inner-bg-{{ section.id }}{
    border-radius: 0;
    padding-left: max(16px, env(safe-area-inset-left));
    padding-right: max(16px, env(safe-area-inset-right));
  }

  .inner-bg-template--25476761977141__main { padding: 16px; }
  .outer-pad-template--25476761977141__main { padding: 0px; }

  .product-title { font-size: 32px !important; }
}

/* Accordion/Tabs line style */
#shopify-section-{{ section.id }} .product-tab{ --accordion-line: var(--DTColor_Border, #e5e5e5); }
#shopify-section-{{ section.id }} .product-tab details > summary,
#shopify-section-{{ section.id }} .dt-sc-tabs .tablinks{
  background: transparent !important; box-shadow: none !important; border: 0 !important; padding-left: 0; padding-right: 0; border-bottom: 2px solid var(--accordion-line);
}
#shopify-section-{{ section.id }} .product-tab details[open] > summary{ background: transparent !important; }
#shopify-section-{{ section.id }} .product-tab details > div,
#shopify-section-{{ section.id }} .dt-sc-tabs .tabcontent{
  background: transparent !important; border: 0 !important; box-shadow: none !important;
}

  /* --- Desktop-only overrides (≥992px) --- */
  @media (min-width: 992px){
    /* 1) Hide the mobile/tablet scroller + dots on desktop */
    #shopify-section-{{ section.id }} .media-scroller,
    #shopify-section-{{ section.id }} .media-dots{
      display: none !important;
      visibility: hidden !important;
      height: 0 !important;
      overflow: hidden !important;
    }

    /* 2) Place DESKTOP MAIN STAGE first, then DESKTOP THUMBNAILS (vertical stacking) */
    #shopify-section-{{ section.id }} .product-media{
      display: grid;
      grid-template-areas:
        "stage"
        "thumbs";
      gap: 12px;
      align-items: start;
    }
    #shopify-section-{{ section.id }} .desktop-stage{
      display: block !important;
      grid-area: stage;
      order: 1; /* safety if order is used elsewhere */
    }
    #shopify-section-{{ section.id }} .desktop-thumbs{
      display: grid !important;
      grid-area: thumbs;
      order: 2;
      grid-auto-flow: column;
      grid-auto-columns: minmax(64px, 96px);
      gap: 8px;
      overflow-x: auto;
      padding-bottom: 2px;
    }

    #shopify-section-template--25476761977141__main .desktop-stage img { border-radius: 12px; }
  }

  /* Mobile-only: hide horizontal scrollbar in the swipe gallery */
  @media (max-width: 991.98px){
    #shopify-section-{{ section.id }} .media-scroller{
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: none;           /* Firefox */
      -ms-overflow-style: none;        /* IE/Edge legacy */
    }
    #shopify-section-{{ section.id }} .media-scroller::-webkit-scrollbar{
      display: none;                   /* Chrome/Safari/Opera */
      height: 0;
      background: transparent;
    }
  }

</style>

<!-- ========= GALLERY + DOTS + SUBTOTAL LOGIC (Editor-safe, section-scoped) ========= -->
<script>
(function(){
  var SECTION_ID = "{{ section.id }}";
  var MONEY_FORMAT = {{ shop.money_format | json }};

  function qs(root, sel){ return root.querySelector(sel); }
  function qsa(root, sel){ return Array.prototype.slice.call(root.querySelectorAll(sel)); }

  // Money formatting using Shopify helper when available
  function formatMoney(cents){
    if (window.Shopify && typeof Shopify.formatMoney === 'function') {
      return Shopify.formatMoney(cents, MONEY_FORMAT);
    }
    var amount = (cents / 100).toFixed(2);
    return '$' + amount;
  }

  function initSection(sectionEl){
    if(!sectionEl) return;

    // Quantity + Subtotal
    var qtyWrap = qs(sectionEl, "[data-qty]");
    var qtyInput = qs(sectionEl, ".quantity-btn-number");
    var subtotalEl = qs(sectionEl, "[data-subtotal]");
    var priceSpan = qs(sectionEl, ".product-price-current .money");

    function getPriceCents(){
      if(!priceSpan) return 0;
      var centsAttr = priceSpan.getAttribute("data-price-cents");
      if(centsAttr) return parseInt(centsAttr, 10) || 0;
      var numeric = (priceSpan.textContent || "").replace(/[^0-9.]/g, "");
      return Math.round(parseFloat(numeric || "0") * 100);
    }

    // --- Subtotal sanitizer: remove any injected HTML wrappers (e.g., <span class="glc-money">)
    function sanitizeSubtotal(forceValueCents){
      if(!subtotalEl) return;
      var centsAttr = typeof forceValueCents === 'number'
        ? forceValueCents
        : parseInt(subtotalEl.getAttribute('data-cents') || '0', 10);

      // Always end with plain text — no inner HTML
      subtotalEl.innerHTML = '';
      subtotalEl.appendChild(document.createTextNode(formatMoney(isNaN(centsAttr) ? 0 : centsAttr)));
    }

    // Watch subtotal for any third-party DOM injections and revert instantly
    (function watchSubtotal(){
      if(!subtotalEl || !window.MutationObserver) return;
      try{
        var suspicious = function(){
          if (
            subtotalEl.children.length > 0 ||
            subtotalEl.querySelector('.glc-money, [data-glc], [data-currency], [class*="money"]')
          ){
            var cents = parseInt(subtotalEl.getAttribute('data-cents') || '0', 10) || 0;
            sanitizeSubtotal(cents);
          }
        };
        var mo = new MutationObserver(function(){ suspicious(); });
        mo.observe(subtotalEl, { childList: true, subtree: true, attributes: true, characterData: false });
        // Clean immediately in case the wrapper is already present
        suspicious();
      }catch(e){}
    })();

    // --- SUBTOTAL: always write plain text, store raw cents on the element
    function setSubtotal(){
      if(!subtotalEl) return;
      var qty = parseFloat(qtyInput && qtyInput.value ? qtyInput.value : "1") || 1;
      var subtotalCents = Math.max(1, qty) * getPriceCents();
      subtotalEl.setAttribute('data-cents', String(subtotalCents)); // keep raw value
      sanitizeSubtotal(subtotalCents);                              // render sanitized text
    }

    if(qtyWrap && qtyInput){
      qtyWrap.addEventListener("click", function(e){
        var btn = e.target.closest("button[data-type]");
        if(!btn) return;
        var t = btn.getAttribute("data-type");
        var v = parseInt(qtyInput.value || "1", 10) || 1;
        if(t === "minus") v = Math.max(1, v - 1);
        if(t === "plus") v = v + 1;
        qtyInput.value = String(v);
        setSubtotal();
      });
      qtyInput.addEventListener("input", setSubtotal);
      setSubtotal();
    }

    // ----- MOBILE/TABLET SCROLLER + DOTS -----
    var scroller = qs(sectionEl, "#MediaScroller-" + SECTION_ID);
    var dotsWrap = qs(sectionEl, "#MediaDots-" + SECTION_ID);
    var slides = scroller ? qsa(scroller, ".media-slide") : [];

    function setActiveDot(index){
      if(!dotsWrap) return;
      qsa(dotsWrap, ".media-dot").forEach(function(btn, i){
        btn.setAttribute("aria-selected", i === index ? "true" : "false");
        btn.tabIndex = i === index ? 0 : -1;
      });
    }

    function scrollToIndex(i){
      if(!scroller || !slides[i]) return;
      slides[i].scrollIntoView({behavior: 'smooth', inline: 'center', block: 'nearest'});
      setActiveDot(i);
    }

    function buildDots(){
      if(!dotsWrap || !slides.length) return;
      dotsWrap.innerHTML = "";
      slides.forEach(function(slide, i){
        var b = document.createElement("button");
        b.className = "media-dot";
        b.type = "button";
        b.setAttribute("role", "tab");
        b.setAttribute("aria-controls", "media-slide-" + SECTION_ID + "-" + i);
        b.setAttribute("aria-selected", slide.classList.contains("is-initial") ? "true" : "false");
        b.tabIndex = slide.classList.contains("is-initial") ? 0 : -1;
        b.addEventListener("click", function(){ scrollToIndex(i); });
        dotsWrap.appendChild(b);
        slide.id = "media-slide-" + SECTION_ID + "-" + i;
      });
      if(!dotsWrap.querySelector('[aria-selected="true"]')) setActiveDot(0);
    }

    function watchSlides(){
      if(!scroller || !slides.length) return;
      var io = new IntersectionObserver(function(entries){
        var best = entries.slice().sort(function(a,b){ return b.intersectionRatio - a.intersectionRatio; })[0];
        if(best && best.isIntersecting){
          var idx = parseInt(best.target.getAttribute("data-index") || "0", 10);
          setActiveDot(idx);
        }
      }, { root: scroller, threshold: [0.5, 0.75, 0.9] });
      slides.forEach(function(slide){ io.observe(slide); });

      scroller.addEventListener("keydown", function(e){
        if(e.key === "ArrowRight"){ e.preventDefault(); var a = qsa(dotsWrap, ".media-dot").findIndex(function(el){ return el.getAttribute("aria-selected")==="true"; }); scrollToIndex(Math.min(slides.length-1, (a<0?0:a+1))); }
        if(e.key === "ArrowLeft"){ e.preventDefault(); var a2 = qsa(dotsWrap, ".media-dot").findIndex(function(el){ return el.getAttribute("aria-selected")==="true"; }); scrollToIndex(Math.max(0, (a2<0?0:a2-1))); }
      }, {passive:false});
    }

    // ----- DESKTOP: THUMB → MAIN STAGE -----
    var featured = qs(sectionEl, "#FeaturedMedia-" + SECTION_ID);
    var thumbsWrap = qs(sectionEl, ".product-media__thumbs.desktop-thumbs");

    function swapDesktopTo(mediaId){
      if(!featured || !mediaId) return;

      var btn = thumbsWrap ? thumbsWrap.querySelector('.product-media__thumb[data-media-id="'+mediaId+'"]') : null;
      if(!btn) return;

      var type = btn.getAttribute('data-media-type') || 'image';

      // Update active state on thumbs ASAP
      if(thumbsWrap){
        qsa(thumbsWrap, '.product-media__thumb').forEach(function(t){
          var active = t.getAttribute('data-media-id') === mediaId;
          t.classList.toggle('is-active', active);
          t.setAttribute('aria-current', active ? 'true' : 'false');
        });
      }

      if(type === 'image'){
        var full   = btn.getAttribute('data-full');
        var srcset = btn.getAttribute('data-srcset');
        var sizes  = btn.getAttribute('data-sizes') || '(min-width: 992px) 700px, 100vw';
        var ar     = parseFloat(btn.getAttribute('data-ar') || '1');

        // Reserve aspect ratio to prevent collapse/reflow
        if (ar && isFinite(ar) && ar > 0) {
          var ratioText = '1 / ' + (1/ar).toFixed(6);
          featured.style.setProperty('--stage-ar', ratioText);
          featured.style.aspectRatio = ratioText;
        }

        // Create next image off-DOM
        var nextImg = new Image();
        nextImg.className = 'product-media__img is-entering';
        nextImg.decoding = 'async';
        nextImg.loading  = 'eager';
        nextImg.sizes    = sizes;
        if (srcset) nextImg.srcset = srcset;
        var fallback = (btn.querySelector('img') ? (btn.querySelector('img').currentSrc || btn.querySelector('img').src) : '');
        nextImg.src = full || fallback;

        var onReady = function(){
          nextImg.classList.add('is-ready');
          featured.innerHTML = '';
          featured.appendChild(nextImg);
          featured.setAttribute('data-current-media-id', mediaId);
        };

        if (nextImg.decode) {
          nextImg.decode().then(onReady).catch(function(){ onReady(); });
        } else {
          nextImg.onload = onReady;
          nextImg.onerror = onReady;
        }
        return;
      }

      // Non-image types: minimal placeholder behavior
      featured.innerHTML = '';
      if (type === 'video' || type === 'external_video') {
        var badge = document.createElement('div');
        badge.textContent = '▶';
        badge.setAttribute('aria-hidden', 'true');
        featured.appendChild(badge);
      } else if (type === 'model') {
        var badge3d = document.createElement('div');
        badge3d.textContent = '3D';
        badge3d.setAttribute('aria-hidden', 'true');
        featured.appendChild(badge3d);
      }
      featured.setAttribute('data-current-media-id', mediaId);
    }

    if(thumbsWrap){
      thumbsWrap.addEventListener("click", function(e){
        var btn = e.target.closest(".product-media__thumb");
        if(!btn) return;
        var id = btn.getAttribute("data-media-id");
        swapDesktopTo(id);

        // Also sync mobile scroller position so both views stay aligned
        if(scroller){
          var slide = scroller.querySelector('.media-slide[data-media-id="'+id+'"]');
          if(slide){ slide.scrollIntoView({behavior:'smooth', inline:'center'}); }
        }
      });
    }

    // Variant change: sync media & price/subtotal
    document.addEventListener('variant:change', function(e){
      try {
        var v = e.detail && e.detail.variant ? e.detail.variant : null;
        var mediaId = v && v.featured_media ? String(v.featured_media.id) : null;

        if(mediaId){
          swapDesktopTo(mediaId);
          if(scroller){
            var slide = scroller.querySelector('.media-slide[data-media-id="'+mediaId+'"]');
            if(slide){ slide.scrollIntoView({behavior:'smooth', inline:'center'}); }
          }
        }

        if(priceSpan && v && typeof v.price === 'number'){
          priceSpan.setAttribute('data-price-cents', v.price);
          priceSpan.textContent = formatMoney(v.price);
          if (subtotalEl){
            subtotalEl.setAttribute('data-cents', v.price); // keep raw cents in subtotal element
            setSubtotal();                                  // recompute with current qty
          }
        }
      } catch(err){}
    });

    // Build dots + observers after DOM ready
    buildDots();
    watchSlides();
  }

  var sectionRoot = document.getElementById('shopify-section-{{ section.id }}') || document;
  initSection(sectionRoot);

  // Re-init inside Theme Editor
  document.addEventListener('shopify:section:load', function(e){
    if(e && e.detail && e.detail.sectionId === "{{ section.id }}"){
      var el = document.getElementById('shopify-section-{{ section.id }}');
      initSection(el);
    }
  });
  document.addEventListener('shopify:section:select', function(e){
    if(e && e.detail && e.detail.sectionId === "{{ section.id }}"){
      var el = document.getElementById('shopify-section-{{ section.id }}');
      initSection(el);
    }
  });

  // Set initial aspect ratio from the initial active thumb (once)
  (function initStageAR(){
    try{
      var active = document.querySelector('#shopify-section-{{ section.id }} .product-media__thumb.is-active');
      if(!active) return;
      var ar = parseFloat(active.getAttribute('data-ar') || '1');
      if (ar && isFinite(ar) && ar > 0) {
        var ratioText = '1 / ' + (1/ar).toFixed(6);
        var featured = document.getElementById('FeaturedMedia-{{ section.id }}');
        if (featured) {
          featured.style.setProperty('--stage-ar', ratioText);
          featured.style.aspectRatio = ratioText;
        }
      }
    } catch(e){}
  })();

})();
</script>

{% schema %}
{
  "name": "Product pages",
  "class": "main-product-template",
  "settings": [
    { "type": "checkbox", "id": "full", "label": "Show Full width" },
    { "type": "checkbox", "id": "spacing_both_ends", "label": "Enable Right & Left Spacing (Works only on Fullwidth)", "default": false },
    { "type": "text", "id": "padding", "label": "Style value (Padding)", "default":"40,40", "info":"Top(px),Bottom(px)" },
    { "type": "text", "id": "margin", "label": "Style value (Margin)", "default":"0,0", "info":"Top(px),Bottom(px)" },

    { "type": "color", "id": "section_bg_color", "label": "Section background color", "default": "#ffffff" },

    { "type": "color", "id": "inner_bg_color", "label": "Inner container background color", "default": "#ffffff" },
    { "type": "range", "id": "inner_bg_radius", "label": "Inner container corner radius", "min": 0, "max": 50, "step": 1, "default": 16 },
    { "type": "range", "id": "inner_bg_padding", "label": "Inner container padding", "min": 0, "max": 80, "step": 4, "default": 24 },

    { "type": "image_picker", "id": "before_image", "label": "Before image", "info": "Size: 1920x1280" },
    { "type": "image_picker", "id": "after_image", "label": "After image", "info": "Size: 1920x1280" },

    { "type": "header", "content": "Media" },
    { "type": "paragraph", "content": "Mobile shows swipeable gallery with dots; desktop shows main image + thumbnails." },
    { "type": "select", "id": "gallery_type", "label": "Gallery type", "options": [
        { "value": "thumbnails_vertical", "label": "Thumbnails vertical" },
        { "value": "thumbnails_horizontal", "label": "Thumbnails horizontal" },
        { "value": "thumbnails_hide", "label": "Hide thumbnails" }
      ],
      "default": "thumbnails_horizontal"
    },
    { "type": "radio", "id": "vertical_style", "label": "Thumb placement", "options": [
        { "value": "dt-sc-product-vertical-thumb-left", "label": "Left" },
        { "value": "dt-sc-product-vertical-thumb-right", "label": "Right" }
      ],
      "default": "dt-sc-product-vertical-thumb-left"
    },
    { "type": "checkbox", "id": "enable_zoom", "label": "Enable image zoom", "default": true },
    { "type": "radio", "id": "zoom_type", "label": "Zoom Style", "options": [
        { "value": "cloud", "label": "Cloud" },
        { "value": "inner", "label": "Inner" },
        { "value": "outer", "label": "Outer" }
      ],
      "default": "cloud"
    },
    { "type": "checkbox", "id": "enable_video_looping", "label": "Enable video looping", "default": false },

    { "type": "header", "content": "Product Meta" },
    { "type": "radio", "id": "meta-lable-style", "label": "Meta lable Style", "options": [
        { "value": "one-half", "label": "One Half" },
        { "value": "full-width", "label": "Full width" }
      ],
      "default": "one-half"
    },
    { "type": "checkbox", "id": "reviews", "label": "Enable reviews", "default": true },
    { "type": "checkbox", "id": "show_variants_swatches", "label": "Enable product swatches", "default": true },
    { "type": "radio", "id": "swatch_as", "label": "Swatch as", "options": [
        { "value": "color", "label": "Color" },
        { "value": "image", "label": "Image" }
      ],
      "default": "color"
    },
    { "type": "checkbox", "id": "show_product_quantity", "label": "Enable stock status", "default": false },
    { "type": "checkbox", "id": "display_back_in_stock", "label": "Enable back in stock", "default": false },
    { "type": "checkbox", "id": "show_quantity_selector", "label": "Enable quantity selector", "default": true },
    { "type": "checkbox", "id": "show_checkout", "label": "Enable buynow", "default": true },
    { "type": "checkbox", "id": "hide_addtocart", "label": "Hide Add to cart", "default": false },
    { "type": "checkbox", "id": "show_wishlist", "label": "Enable Wishlist", "default": true },

    { "type": "header", "content": "Display" },
    { "type": "checkbox", "id": "hide_grid_titles", "label": "Hide grid item titles", "default": false },

    { "type": "header", "content": "Tab Section" },
    { "type": "radio", "id": "tab_position", "label": "Tab position", "options": [
        { "value": "right", "label": "Right" },
        { "value": "bottom", "label": "Bottom" }
      ],
      "default": "bottom"
    },
    { "type": "radio", "id": "tab_style", "label": "Tab style", "options": [
        { "value": "tab", "label": "Tab" },
        { "value": "toggle", "label": "Toggle" }
      ],
      "default": "tab"
    },
    { "type": "checkbox", "id": "product_tab1", "label": "Enable Product Description", "default": true },
    { "type": "text", "id": "product_tab1_heading", "label": "Tab 1", "default": "Product Description" },
    { "type": "checkbox", "id": "product_tab2", "label": "Enable Shipping details", "default": false },
    { "type": "text", "id": "product_tab2_heading", "label": "Tab 2", "default": "Additional information" },
    { "type": "page", "id": "page_content", "label": "Select the page" },
    { "type": "checkbox", "id": "product_tab3", "label": "Enable Product Review", "default": false },
    { "type": "text", "id": "product_tab3_heading", "label": "Tab 3", "default": "Reviews" },
    { "type": "checkbox", "id": "enable_enquiry", "label": "Show Enquiry Form", "default": false },
    { "type": "checkbox", "id": "enable_sticky_cart", "label": "Show sticky cart", "default": false },
    { "type": "checkbox", "id": "show_adv_product", "label": "Show advanced product tagging", "default": false },
    { "type": "text", "id": "choose_label", "label": "Choose style", "default":"Choose style" },
    { "id": "collection", "type": "collection", "label": "Collection" }
  ],
  "blocks":[
    { "type": "@app" },
    { "type": "title", "name": "Title", "limit": 1 },
    { "type": "text", "name": "Text",
      "settings": [{ "type": "text", "id": "text", "default": "Text", "label": "Short text" }]
    },
    { "type": "price", "name": "Price", "limit": 1 },
    { "type": "short_text", "name": "Short description", "limit": 1 },
    { "type": "vendor", "name": "Vendor", "limit": 1 },
    { "type": "type", "name": "Type", "limit": 1 },
    { "type": "sku", "name": "Sku", "limit": 1 },
    { "type": "notify-form", "name": "Notify form", "limit": 1 },
    { "type": "fbt", "name": "Bought Together", "limit": 1 },
    { "type": "size_chart", "name": "Size Chart", "limit": 1 },
    { "type": "deal", "name": "Deal counter", "limit": 1 },
    { "type": "social-sharing", "name": "Social sharing", "limit": 1 },
    { "type": "badge", "limit": 1, "name": "Badge",
      "settings": [
        { "type": "image_picker", "id": "image", "label": "Image" },
        { "type": "text", "id": "badge_label", "label": "Badge Title", "default": "100% Secured Payment" }
      ]
    },
    { "type": "carousel", "name": "Sidebar Product Carousel", "limit": 1,
      "settings": [
        { "type": "text", "id": "title", "label": "Heading", "default": "Sidebar Product Carousel" },
        { "type": "collection", "id": "collection", "label": "Collection" },
        { "type": "range", "id": "limit", "min": 1, "max": 5, "step": 1, "label": "Limit", "default": 5 }
      ]
    },
    { "type": "collection", "name": "Sidebar Product List", "limit": 1,
      "settings": [
        { "type": "text", "id": "title", "label": "Heading", "default": "Sidebar Product List" },
        { "type": "collection", "id": "collection", "label": "Collection" },
        { "type": "range", "id": "limit", "min": 1, "max": 5, "step": 1, "label": "Limit", "default": 2 }
      ]
    },
    { "type": "menu", "limit": 1, "name": "Sidebar Menu",
      "settings": [
        { "type": "text", "id": "title", "label": "Title", "default": "Sidebar Menu" },
        { "type": "link_list", "id": "linklist", "label": "Menu" }
      ]
    },
    { "type": "image", "limit": 1, "name": "Sidebar image",
      "settings": [
        { "type": "text", "id": "title", "label": "Title", "default": "Sidebar image" },
        { "type": "image_picker", "id": "image", "label": "Image" },
        { "type": "text", "id": "link_text", "label": "Link Text", "default": "Shop Now" },
        { "type": "url", "id": "link", "label": "Link" }
      ]
    }
  ]
}
{% endschema %}
