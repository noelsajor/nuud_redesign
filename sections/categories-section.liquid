{% comment %}
Category Showcase â€“ 3 clickable category cards with hover-only overlay,
image overflow, adjustable padding/background, and optional fixed aspect ratio.
{% endcomment %}
{% assign ai_gen_id = section.id | replace: '_', '' | downcase %}

{% style %}
  .ai-category-showcase-{{ ai_gen_id }}{
    --overflow: {{ section.settings.image_overflow }}px;
    --radius: {{ section.settings.border_radius }}px;

    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
    padding-left: {{ section.settings.padding_horizontal }}px;
    padding-right: {{ section.settings.padding_horizontal }}px;

    background-color: {{ section.settings.background_color }};
    {% if section.settings.background_image %}
      background-image: url('{{ section.settings.background_image | image_url: width: 2000 }}');
      background-size: {{ section.settings.background_size }};
      background-position: {{ section.settings.background_position }};
      background-repeat: no-repeat;
      background-attachment: {{ section.settings.background_attachment }};
    {% endif %}
    position: relative;
  }

  .ai-category-showcase__background-overlay-{{ ai_gen_id }}{
    position: absolute; inset: 0;
    background-color: {{ section.settings.background_overlay_color }};
    opacity: {{ section.settings.background_overlay_opacity | divided_by: 100.0 }};
    pointer-events: none; z-index: 1;
  }

  .ai-category-showcase__container-{{ ai_gen_id }}{
    max-width: 1200px; margin: 100px auto;
    position: relative; z-index: 2;
  }

  .ai-category-showcase__header-{{ ai_gen_id }}{
    text-align: {{ section.settings.text_alignment }};
    margin-bottom: {{ section.settings.header_spacing }}px;
  }
  .ai-category-showcase__heading-{{ ai_gen_id }}{
    font-size: {{ section.settings.heading_size }}px;
    color: {{ section.settings.heading_color }};
    margin: 0 0 {{ section.settings.heading_margin }}px 0; font-weight: 600;
  }
  .ai-category-showcase__subheading-{{ ai_gen_id }}{
    font-size: {{ section.settings.subheading_size }}px;
    color: {{ section.settings.subheading_color }};
    margin: 0 0 {{ section.settings.subheading_margin }}px 0; font-weight: 500;
  }
  .ai-category-showcase__body-text-{{ ai_gen_id }}{
    font-size: {{ section.settings.body_text_size }}px;
    color: {{ section.settings.body_text_color }}; line-height: 1.6; margin: 0; max-width: 600px;
    {% if section.settings.text_alignment == 'center' %}margin-left:auto; margin-right:auto;{% endif %}
  }

  .ai-category-showcase__grid-{{ ai_gen_id }}{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 30px;
    align-items: start;
    margin-top: var(--overflow);
  }

  .ai-category-showcase__item-{{ ai_gen_id }}{
    position: relative; border-radius: var(--radius);
    overflow: visible; cursor: pointer;
    transition: transform .4s ease, box-shadow .4s ease;
    background-color: {{ section.settings.card_background }};
    display: flex; flex-direction: column; text-decoration: none;
    margin-top: var(--overflow);

    /* Aspect-ratio control (fallback to fixed height if set to none) */
    {% if section.settings.card_aspect_ratio != 'none' %}
      aspect-ratio: {{ section.settings.card_aspect_ratio }};
    {% else %}
      height: 350px;
    {% endif %}
  }
  .ai-category-showcase__item-{{ ai_gen_id }}:hover{
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0,0,0,.15);
  }

  .ai-category-showcase__image-wrapper-{{ ai_gen_id }}{
    position: relative;
    height: calc(100% + var(--overflow));
    margin-top: calc(-1 * var(--overflow));
    overflow: hidden;
    border-radius: var(--radius);
    z-index: 2;
  }
  .ai-category-showcase__image-{{ ai_gen_id }}{
    width: 100%; height: 100%;
    object-fit: {{ section.settings.image_fit }};
    transition: transform .4s ease;
    display: block;
  }
  .ai-category-showcase__item-{{ ai_gen_id }}:hover .ai-category-showcase__image-{{ ai_gen_id }}{ transform: scale(1.05); }

  .ai-category-showcase__image-placeholder-{{ ai_gen_id }}{
    width:100%; height:100%; background:#f4f4f4;
    display:flex; align-items:center; justify-content:center; position:relative; border-radius: var(--radius);
  }
  .ai-category-showcase__image-placeholder-{{ ai_gen_id }} svg{ width:80px; height:80px; color:#ccc; }

  /* Hover-only overlay */
  .ai-category-showcase__overlay-{{ ai_gen_id }}{
    position:absolute; inset:0;
    background: linear-gradient(to bottom, transparent 0%, rgba(0,0,0,.6) 100%);
    opacity: 0; transition: opacity .4s ease;
    display:flex; flex-direction:column; justify-content:center; align-items:center;
    text-align:center; padding: 25px; border-radius: var(--radius);
  }
  .ai-category-showcase__item-{{ ai_gen_id }}:hover .ai-category-showcase__overlay-{{ ai_gen_id }}{ opacity:1; }
  /* Also reveal overlay on keyboard focus */
  .ai-category-showcase__item-{{ ai_gen_id }}:focus-visible .ai-category-showcase__overlay-{{ ai_gen_id }}{ opacity:1; }

  .ai-category-showcase__title-{{ ai_gen_id }}{
    font-size: {{ section.settings.title_size }}px; font-weight: 600; margin-bottom:10px;
    color: {{ section.settings.title_color }};
    transform: translateY(20px); transition: transform .4s ease;
  }
  .ai-category-showcase__item-{{ ai_gen_id }}:hover .ai-category-showcase__title-{{ ai_gen_id }}{ transform: translateY(0); }

  .ai-category-showcase__description-{{ ai_gen_id }}{
    font-size: {{ section.settings.description_size }}px; color: {{ section.settings.description_color }};
    line-height:1.5; margin-bottom:15px; transform: translateY(20px);
    transition: transform .4s ease .1s;
  }
  .ai-category-showcase__item-{{ ai_gen_id }}:hover .ai-category-showcase__description-{{ ai_gen_id }}{ transform: translateY(0); }

  .ai-category-showcase__cta-{{ ai_gen_id }}{
    display:inline-flex; align-items:center; gap:8px;
    color: {{ section.settings.cta_color }}; font-size:14px; font-weight:500; text-decoration:none;
    transform: translateY(20px);
    transition: transform .4s ease .2s, color .3s ease;
  }
  .ai-category-showcase__item-{{ ai_gen_id }}:hover .ai-category-showcase__cta-{{ ai_gen_id }}{
    transform: translateY(0); color: {{ section.settings.cta_hover_color }};
  }
  .ai-category-showcase__cta-arrow-{{ ai_gen_id }}{ transition: transform .3s ease; }
  .ai-category-showcase__item-{{ ai_gen_id }}:hover .ai-category-showcase__cta-arrow-{{ ai_gen_id }}{ transform: translateX(5px); }

  .ai-category-showcase__empty-state-{{ ai_gen_id }}{
    position:absolute; bottom:10px; left:50%; transform: translateX(-50%);
    font-size:12px; color:#999; text-align:center; pointer-events:none;
  }

  .ai-category-showcase__footer-{{ ai_gen_id }}{
    text-align: {{ section.settings.text_alignment }};
    margin-top: {{ section.settings.button_margin }}px;
  }
  .ai-category-showcase__see-all-button-{{ ai_gen_id }}{
    display:inline-flex; align-items:center; gap:8px;
    padding: {{ section.settings.button_padding_vertical }}px {{ section.settings.button_padding_horizontal }}px;
    background: {{ section.settings.button_bg_color }}; color: {{ section.settings.button_text_color }};
    text-decoration:none; border-radius: {{ section.settings.button_border_radius }}px;
    font-size: {{ section.settings.button_text_size }}px; font-weight:500;
    border: {{ section.settings.button_border_width }}px solid {{ section.settings.button_border_color }};
    transition: all .3s ease;
  }
  .ai-category-showcase__see-all-button-{{ ai_gen_id }}:hover{
    background: {{ section.settings.button_bg_hover_color }}; color: {{ section.settings.button_text_hover_color }};
    border-color: {{ section.settings.button_border_hover_color }};
    transform: translateY(-2px);
  }
  .ai-category-showcase__button-arrow-{{ ai_gen_id }}{ transition: transform .3s ease; }
  .ai-category-showcase__see-all-button-{{ ai_gen_id }}:hover .ai-category-showcase__button-arrow-{{ ai_gen_id }}{ transform: translateX(3px); }

  /* Mobile tweaks */
  @media (max-width: 768px){
    .ai-category-showcase-{{ ai_gen_id }}{
      padding-left: {{ section.settings.padding_horizontal | times: 0.5 }}px;
      padding-right: {{ section.settings.padding_horizontal | times: 0.5 }}px;
    }
    .ai-category-showcase__grid-{{ ai_gen_id }}{
      grid-template-columns: 1fr; gap: 20px; margin-top: calc(var(--overflow) * .7);
    }
    .ai-category-showcase__item-{{ ai_gen_id }}{
      {% if section.settings.card_aspect_ratio == 'none' %}
        height: 300px;
      {% endif %}
      margin-top: calc(var(--overflow) * .7);
    }
    .ai-category-showcase__image-wrapper-{{ ai_gen_id }}{
      height: calc(100% + (var(--overflow) * .7));
      margin-top: calc(-1 * var(--overflow) * .7);
    }
    .ai-category-showcase__heading-{{ ai_gen_id }}{ font-size: {{ section.settings.heading_size | times: 0.8 }}px; }
    .ai-category-showcase__subheading-{{ ai_gen_id }}{ font-size: {{ section.settings.subheading_size | times: 0.9 }}px; }
  }

  /* Motion safety */
  @media (prefers-reduced-motion: reduce){
    .ai-category-showcase__item-{{ ai_gen_id }},
    .ai-category-showcase__image-{{ ai_gen_id }},
    .ai-category-showcase__overlay-{{ ai_gen_id }},
    .ai-category-showcase__title-{{ ai_gen_id }},
    .ai-category-showcase__description-{{ ai_gen_id }},
    .ai-category-showcase__cta-{{ ai_gen_id }}{
      transition: none !important;
    }
  }
{% endstyle %}

<category-showcase-{{ ai_gen_id }} class="ai-category-showcase-{{ ai_gen_id }}">
  {% if section.settings.background_image and section.settings.background_overlay_opacity > 0 %}
    <div class="ai-category-showcase__background-overlay-{{ ai_gen_id }}"></div>
  {% endif %}

  <div class="ai-category-showcase__container-{{ ai_gen_id }}">
    {% if section.settings.heading != blank or section.settings.subheading != blank or section.settings.body_text != blank %}
      <div class="ai-category-showcase__header-{{ ai_gen_id }}">
        {% if section.settings.heading != blank %}
          <h2 class="ai-category-showcase__heading-{{ ai_gen_id }}">{{ section.settings.heading }}</h2>
        {% endif %}
        {% if section.settings.subheading != blank %}
          <h3 class="ai-category-showcase__subheading-{{ ai_gen_id }}">{{ section.settings.subheading }}</h3>
        {% endif %}
        {% if section.settings.body_text != blank %}
          <div class="ai-category-showcase__body-text-{{ ai_gen_id }}">{{ section.settings.body_text }}</div>
        {% endif %}
      </div>
    {% endif %}

    <div class="ai-category-showcase__grid-{{ ai_gen_id }}">
      {% for i in (1..3) %}
        {% liquid
          assign collection_key   = 'category_' | append: i | append: '_collection'
          assign title_key        = 'category_' | append: i | append: '_title'
          assign description_key  = 'category_' | append: i | append: '_description'
          assign image_key        = 'category_' | append: i | append: '_image'

          assign collection   = section.settings[collection_key]
          assign custom_title = section.settings[title_key]
          assign description  = section.settings[description_key]
          assign image        = section.settings[image_key]

          if collection != blank
            assign category_url = collection.url
            assign category_title = collection.title
          else
            assign category_url = '#'
            assign category_title = custom_title
          endif

          if custom_title != blank
            assign display_title = custom_title
          else
            assign display_title = category_title
          endif
        %}

        <a href="{{ category_url }}" class="ai-category-showcase__item-{{ ai_gen_id }}" data-category="{{ i }}">
          <div class="ai-category-showcase__image-wrapper-{{ ai_gen_id }}">
            {% if image %}
              <img
                src="{{ image | image_url: width: 900 }}"
                srcset="
                  {{ image | image_url: width: 480 }} 480w,
                  {{ image | image_url: width: 720 }} 720w,
                  {{ image | image_url: width: 900 }} 900w,
                  {{ image | image_url: width: 1200 }} 1200w
                "
                sizes="(max-width: 768px) 100vw, 33vw"
                alt="{{ image.alt | escape }}"
                class="ai-category-showcase__image-{{ ai_gen_id }}"
                loading="lazy"
                width="{{ image.width }}"
                height="{{ image.height }}"
              >
            {% elsif collection and collection.featured_image %}
              <img
                src="{{ collection.featured_image | image_url: width: 900 }}"
                srcset="
                  {{ collection.featured_image | image_url: width: 480 }} 480w,
                  {{ collection.featured_image | image_url: width: 720 }} 720w,
                  {{ collection.featured_image | image_url: width: 900 }} 900w,
                  {{ collection.featured_image | image_url: width: 1200 }} 1200w
                "
                sizes="(max-width: 768px) 100vw, 33vw"
                alt="{{ collection.featured_image.alt | escape }}"
                class="ai-category-showcase__image-{{ ai_gen_id }}"
                loading="lazy"
                width="{{ collection.featured_image.width }}"
                height="{{ collection.featured_image.height }}"
              >
            {% else %}
              <div class="ai-category-showcase__image-placeholder-{{ ai_gen_id }}">
                {{ 'collection-1' | placeholder_svg_tag }}
                {% if collection == blank and custom_title == blank %}
                  <div class="ai-category-showcase__empty-state-{{ ai_gen_id }}">Add a collection or title</div>
                {% endif %}
              </div>
            {% endif %}

            <div class="ai-category-showcase__overlay-{{ ai_gen_id }}">
              {% if display_title != blank %}
                <h3 class="ai-category-showcase__title-{{ ai_gen_id }}">{{ display_title }}</h3>
              {% endif %}
              {% if description != blank %}
                <p class="ai-category-showcase__description-{{ ai_gen_id }}">{{ description }}</p>
              {% endif %}
              <span class="ai-category-showcase__cta-{{ ai_gen_id }}">
                {{ section.settings.cta_text }}
                <span class="ai-category-showcase__cta-arrow-{{ ai_gen_id }}">â†’</span>
              </span>
            </div>
          </div>
        </a>
      {% endfor %}
    </div>

    {% if section.settings.see_all_text != blank and section.settings.see_all_link != blank %}
      <div class="ai-category-showcase__footer-{{ ai_gen_id }}">
        <a href="{{ section.settings.see_all_link }}" class="ai-category-showcase__see-all-button-{{ ai_gen_id }}">
          {{ section.settings.see_all_text }}
          <span class="ai-category-showcase__button-arrow-{{ ai_gen_id }}">â†’</span>
        </a>
      </div>
    {% endif %}
  </div>
</category-showcase-{{ ai_gen_id }}>

<script>
  (function(){
    class CategoryShowcase{{ ai_gen_id }} extends HTMLElement {
      connectedCallback(){
        this.items = this.querySelectorAll('.ai-category-showcase__item-{{ ai_gen_id }}');
        this.setupAnimation();
      }
      setupAnimation(){
        const observer = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            if(entry.isIntersecting){
              this.animateItems();
              observer.unobserve(entry.target);
            }
          });
        }, { threshold: 0.1 });
        observer.observe(this);
      }
      animateItems(){
        this.items.forEach((item, index) => {
          item.style.opacity = '0';
          item.style.transform = 'translateY(30px)';
          item.style.transition = 'opacity .6s ease, transform .6s ease';
          setTimeout(() => {
            item.style.opacity = '1';
            item.style.transform = 'translateY(0)';
          }, index * 150);
        });
      }
    }
    customElements.define('category-showcase-{{ ai_gen_id }}', CategoryShowcase{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Category showcase",
  "settings": [
    { "type": "header", "content": "Section spacing" },
    { "type": "range", "id": "padding_top", "min": 0, "max": 120, "step": 5, "unit": "px", "label": "Top padding", "default": 60 },
    { "type": "range", "id": "padding_bottom", "min": 0, "max": 120, "step": 5, "unit": "px", "label": "Bottom padding", "default": 60 },
    { "type": "range", "id": "padding_horizontal", "min": 0, "max": 60, "step": 5, "unit": "px", "label": "Horizontal padding", "default": 20 },

    { "type": "header", "content": "Background" },
    { "type": "color", "id": "background_color", "label": "Background color", "default": "#ffffff" },
    { "type": "image_picker", "id": "background_image", "label": "Background image" },
    { "type": "select", "id": "background_size", "label": "Background size",
      "options": [
        { "value": "cover", "label": "Cover" },
        { "value": "contain", "label": "Contain" },
        { "value": "auto", "label": "Auto" }
      ], "default": "cover"
    },
    { "type": "select", "id": "background_position", "label": "Background position",
      "options": [
        { "value": "center center", "label": "Center" },
        { "value": "top center", "label": "Top" },
        { "value": "bottom center", "label": "Bottom" },
        { "value": "left center", "label": "Left" },
        { "value": "right center", "label": "Right" }
      ], "default": "center center"
    },
    { "type": "select", "id": "background_attachment", "label": "Background attachment",
      "options": [
        { "value": "scroll", "label": "Scroll" },
        { "value": "fixed", "label": "Fixed" }
      ], "default": "scroll"
    },
    { "type": "color", "id": "background_overlay_color", "label": "Background overlay color", "default": "#000000" },
    { "type": "range", "id": "background_overlay_opacity", "min": 0, "max": 100, "step": 5, "unit": "%", "label": "Background overlay opacity", "default": 0 },

    { "type": "header", "content": "Image overflow" },
    { "type": "range", "id": "image_overflow", "min": 0, "max": 120, "step": 5, "unit": "px", "label": "Image overflow amount (top)", "default": 30 },

    { "type": "header", "content": "Section header" },
    { "type": "text", "id": "heading", "label": "Heading", "default": "Shop by Category" },
    { "type": "text", "id": "subheading", "label": "Subheading", "default": "Discover our collections" },
    { "type": "textarea", "id": "body_text", "label": "Body text", "default": "Explore our carefully curated categories and find exactly what you're looking for." },
    { "type": "select", "id": "text_alignment", "label": "Text alignment",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ], "default": "center"
    },
    { "type": "range", "id": "header_spacing", "min": 20, "max": 80, "step": 5, "unit": "px", "label": "Header bottom spacing", "default": 50 },

    { "type": "header", "content": "See all button" },
    { "type": "text", "id": "see_all_text", "label": "Button text", "default": "See all products" },
    { "type": "url", "id": "see_all_link", "label": "Button link" },

    { "type": "header", "content": "Category 1" },
    { "type": "collection", "id": "category_1_collection", "label": "Collection" },
    { "type": "text", "id": "category_1_title", "label": "Custom title" },
    { "type": "text", "id": "category_1_description", "label": "Description" },
    { "type": "image_picker", "id": "category_1_image", "label": "Custom image" },

    { "type": "header", "content": "Category 2" },
    { "type": "collection", "id": "category_2_collection", "label": "Collection" },
    { "type": "text", "id": "category_2_title", "label": "Custom title" },
    { "type": "text", "id": "category_2_description", "label": "Description" },
    { "type": "image_picker", "id": "category_2_image", "label": "Custom image" },

    { "type": "header", "content": "Category 3" },
    { "type": "collection", "id": "category_3_collection", "label": "Collection" },
    { "type": "text", "id": "category_3_title", "label": "Custom title" },
    { "type": "text", "id": "category_3_description", "label": "Description" },
    { "type": "image_picker", "id": "category_3_image", "label": "Custom image" },

    { "type": "text", "id": "cta_text", "label": "Category call to action text (hover)", "default": "Shop now" },

    { "type": "header", "content": "Card & overlay colors" },
    { "type": "color", "id": "card_background", "label": "Card background", "default": "#ffffff" },
    { "type": "color", "id": "title_color", "label": "Category title", "default": "#ffffff" },
    { "type": "color", "id": "description_color", "label": "Category description", "default": "#ffffff" },
    { "type": "color", "id": "cta_color", "label": "Category call to action", "default": "#ffffff" },
    { "type": "color", "id": "cta_hover_color", "label": "Category call to action hover", "default": "#ff679a" },

    { "type": "header", "content": "Button colors" },
    { "type": "color", "id": "button_bg_color", "label": "Background", "default": "#343434" },
    { "type": "color", "id": "button_text_color", "label": "Text", "default": "#ffffff" },
    { "type": "color", "id": "button_bg_hover_color", "label": "Background hover", "default": "#ff679a" },
    { "type": "color", "id": "button_text_hover_color", "label": "Text hover", "default": "#ffffff" },
    { "type": "color", "id": "button_border_color", "label": "Border", "default": "#343434" },
    { "type": "color", "id": "button_border_hover_color", "label": "Border hover", "default": "#ff679a" },

    { "type": "header", "content": "Typography" },
    { "type": "range", "id": "heading_size", "min": 20, "max": 60, "step": 2, "unit": "px", "label": "Heading size", "default": 36 },
    { "type": "range", "id": "heading_margin", "min": 0, "max": 40, "step": 2, "unit": "px", "label": "Heading bottom margin", "default": 16 },
    { "type": "range", "id": "subheading_size", "min": 14, "max": 32, "step": 1, "unit": "px", "label": "Subheading size", "default": 20 },
    { "type": "range", "id": "subheading_margin", "min": 0, "max": 40, "step": 2, "unit": "px", "label": "Subheading bottom margin", "default": 12 },
    { "type": "range", "id": "body_text_size", "min": 12, "max": 24, "step": 1, "unit": "px", "label": "Body text size", "default": 16 },
    { "type": "range", "id": "title_size", "min": 16, "max": 32, "step": 1, "unit": "px", "label": "Category title size", "default": 24 },
    { "type": "range", "id": "description_size", "min": 12, "max": 20, "step": 1, "unit": "px", "label": "Category description size", "default": 16 },

    { "type": "header", "content": "Button style" },
    { "type": "range", "id": "button_text_size", "min": 12, "max": 20, "step": 1, "unit": "px", "label": "Text size", "default": 16 },
    { "type": "range", "id": "button_padding_vertical", "min": 8, "max": 24, "step": 2, "unit": "px", "label": "Vertical padding", "default": 12 },
    { "type": "range", "id": "button_padding_horizontal", "min": 16, "max": 48, "step": 2, "unit": "px", "label": "Horizontal padding", "default": 24 },
    { "type": "range", "id": "button_border_radius", "min": 0, "max": 30, "step": 2, "unit": "px", "label": "Border radius", "default": 6 },
    { "type": "range", "id": "button_border_width", "min": 0, "max": 4, "step": 1, "unit": "px", "label": "Border width", "default": 1 },
    { "type": "range", "id": "button_margin", "min": 20, "max": 80, "step": 5, "unit": "px", "label": "Top margin", "default": 40 },

    { "type": "header", "content": "Card style" },
    { "type": "range", "id": "border_radius", "min": 0, "max": 30, "step": 2, "unit": "px", "label": "Card border radius", "default": 12 },
    { "type": "select", "id": "card_aspect_ratio", "label": "Card aspect ratio", "default": "none",
      "options": [
        { "value": "none", "label": "Auto height (no fixed ratio)" },
        { "value": "1/1", "label": "1:1 (square)" },
        { "value": "4/5", "label": "4:5 (portrait)" },
        { "value": "3/4", "label": "3:4" },
        { "value": "2/3", "label": "2:3" },
        { "value": "3/2", "label": "3:2" },
        { "value": "4/3", "label": "4:3" },
        { "value": "16/9", "label": "16:9 (landscape)" }
      ]
    },
    { "type": "select", "id": "image_fit", "label": "Image fit inside card", "default": "cover",
      "options": [
        { "value": "cover", "label": "Cover (fill & crop)" },
        { "value": "contain", "label": "Contain (letterbox if needed)" }
      ]
    }
  ],
  "presets": [{ "name": "Category showcase" }]
}
{% endschema %}
