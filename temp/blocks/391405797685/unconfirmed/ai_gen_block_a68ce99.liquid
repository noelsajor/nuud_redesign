{% doc %}
  @prompt
    I need a home section that I can set a background image that can be aligned left-center-right, change the background color of the whole section, the section should also allows me to include a heading, sub heading and description text which should be contained and also allows me to align left-center-right. Inside the text container I need another container where I can arrange up to 4 categories, I want to be able to link the categories to the actual categories in my shop, I want to be able to set the max amount of categories per row, enable and disable a dropshadow effect for the categories card, include a fixed-parallax-none adjustment for the background image, I need a splited container where the heading, subheading, content and categories are vertically arrange inside the left container, while on the right container I can fit an image, please animate the image inside the right container like it is floating on the water, I want to be able to adjust the amount of bouncing, I want to be able to enable or disable the amount of categories to show, I want to be able to adjust the images for the categories to overflow outside it container, I want to be able to set different images for the categories

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-split-section-{{ ai_gen_id }} {
    position: relative;
    min-height: 500px;
    background-color: {{ block.settings.background_color }};
    overflow: hidden;
  }

  .ai-split-section-bg-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .ai-split-section-bg-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: {{ block.settings.image_alignment }};
  }

  .ai-split-section-bg-{{ ai_gen_id }}--fixed {
    background-attachment: fixed;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: {{ block.settings.image_alignment }};
  }

  .ai-split-section-bg-{{ ai_gen_id }}--parallax {
    transform: translateZ(0);
    will-change: transform;
  }

  .ai-split-section-placeholder-bg-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-split-section-placeholder-bg-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 300px;
    max-height: 300px;
    opacity: 0.3;
  }

  .ai-split-section-content-{{ ai_gen_id }} {
    position: relative;
    z-index: 2;
    padding: 60px 20px;
    min-height: 500px;
  }

  .ai-split-section-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    align-items: center;
    min-height: 400px;
  }

  .ai-split-section-left-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 24px;
    text-align: {{ block.settings.content_alignment }};
  }

  .ai-split-section-right-{{ ai_gen_id }} {
    position: relative;
  }

  .ai-split-section-heading-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    margin: 0;
    line-height: 1.2;
  }

  .ai-split-section-subheading-{{ ai_gen_id }} {
    font-size: {{ block.settings.subheading_size }}px;
    color: {{ block.settings.subheading_color }};
    margin: 0;
    line-height: 1.4;
  }

  .ai-split-section-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    color: {{ block.settings.description_color }};
    margin: 0;
    line-height: 1.6;
  }

  .ai-split-section-categories-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.categories_per_row }}, 1fr);
    gap: 16px;
    {% if block.settings.enable_image_overflow %}
      overflow: visible;
    {% endif %}
  }

  .ai-split-section-category-{{ ai_gen_id }} {
    background-color: {{ block.settings.category_bg_color }};
    border-radius: {{ block.settings.category_border_radius }}px;
    padding: 16px;
    text-decoration: none;
    color: {{ block.settings.category_text_color }};
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    display: block;
    text-align: center;
    position: relative;
    {% if block.settings.enable_image_overflow %}
      overflow: visible;
    {% endif %}
  }

  .ai-split-section-category-{{ ai_gen_id }}:hover {
    color: {{ block.settings.category_hover_text_color }};
    background-color: {{ block.settings.category_hover_bg_color }};
    transform: translateY(-2px);
  }

  .ai-split-section-category-{{ ai_gen_id }}--shadow {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .ai-split-section-category-{{ ai_gen_id }}--shadow:hover {
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
  }

  .ai-split-section-category-image-{{ ai_gen_id }} {
    width: 100%;
    height: 80px;
    margin-bottom: 8px;
    border-radius: {{ block.settings.category_image_radius }}px;
    {% if block.settings.enable_image_overflow %}
      overflow: visible;
      position: relative;
    {% else %}
      overflow: hidden;
    {% endif %}
  }

  .ai-split-section-category-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: {{ block.settings.category_image_radius }}px;
    {% if block.settings.enable_image_overflow %}
      transform: scale({{ block.settings.image_overflow_scale }});
      {% if block.settings.image_overflow_direction == 'top' %}
        transform-origin: center bottom;
      {% elsif block.settings.image_overflow_direction == 'bottom' %}
        transform-origin: center top;
      {% elsif block.settings.image_overflow_direction == 'left' %}
        transform-origin: right center;
      {% elsif block.settings.image_overflow_direction == 'right' %}
        transform-origin: left center;
      {% elsif block.settings.image_overflow_direction == 'top-left' %}
        transform-origin: right bottom;
      {% elsif block.settings.image_overflow_direction == 'top-right' %}
        transform-origin: left bottom;
      {% elsif block.settings.image_overflow_direction == 'bottom-left' %}
        transform-origin: right top;
      {% elsif block.settings.image_overflow_direction == 'bottom-right' %}
        transform-origin: left top;
      {% else %}
        transform-origin: center center;
      {% endif %}
      z-index: 2;
      position: relative;
    {% endif %}
  }

  .ai-split-section-category-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f0f0f0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: {{ block.settings.category_image_radius }}px;
    {% if block.settings.enable_image_overflow %}
      transform: scale({{ block.settings.image_overflow_scale }});
      {% if block.settings.image_overflow_direction == 'top' %}
        transform-origin: center bottom;
      {% elsif block.settings.image_overflow_direction == 'bottom' %}
        transform-origin: center top;
      {% elsif block.settings.image_overflow_direction == 'left' %}
        transform-origin: right center;
      {% elsif block.settings.image_overflow_direction == 'right' %}
        transform-origin: left center;
      {% elsif block.settings.image_overflow_direction == 'top-left' %}
        transform-origin: right bottom;
      {% elsif block.settings.image_overflow_direction == 'top-right' %}
        transform-origin: left bottom;
      {% elsif block.settings.image_overflow_direction == 'bottom-left' %}
        transform-origin: right top;
      {% elsif block.settings.image_overflow_direction == 'bottom-right' %}
        transform-origin: left top;
      {% else %}
        transform-origin: center center;
      {% endif %}
      z-index: 2;
      position: relative;
    {% endif %}
  }

  .ai-split-section-category-placeholder-{{ ai_gen_id }} svg {
    width: 30px;
    height: 30px;
    opacity: 0.5;
  }

  .ai-split-section-category-title-{{ ai_gen_id }} {
    font-size: 14px;
    font-weight: 600;
    margin: 0;
    position: relative;
    z-index: 3;
  }

  .ai-split-section-empty-category-{{ ai_gen_id }} {
    padding: 16px;
    text-align: center;
    color: #666;
    font-style: italic;
    background-color: #f9f9f9;
    border-radius: {{ block.settings.category_border_radius }}px;
    border: 2px dashed #ddd;
    font-size: 12px;
  }

  .ai-split-section-right-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    min-height: 400px;
    border-radius: {{ block.settings.right_image_radius }}px;
    overflow: hidden;
  }

  .ai-split-section-right-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    animation: ai-float-{{ ai_gen_id }} {{ block.settings.float_duration }}s ease-in-out infinite;
  }

  .ai-split-section-right-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    min-height: 400px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: {{ block.settings.right_image_radius }}px;
    position: relative;
  }

  .ai-split-section-right-placeholder-{{ ai_gen_id }} svg {
    width: 100px;
    height: 100px;
    opacity: 0.3;
    animation: ai-float-{{ ai_gen_id }} {{ block.settings.float_duration }}s ease-in-out infinite;
  }

  .ai-split-section-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 8px 16px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 4px;
    font-size: 12px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  @keyframes ai-float-{{ ai_gen_id }} {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-{{ block.settings.float_intensity }}px);
    }
  }

  {% if block.settings.enable_float_animation == false %}
    .ai-split-section-right-image-{{ ai_gen_id }} img,
    .ai-split-section-right-placeholder-{{ ai_gen_id }} svg {
      animation: none;
    }
  {% endif %}

  {% if block.settings.show_categories == false %}
    .ai-split-section-categories-{{ ai_gen_id }} {
      display: none;
    }
  {% endif %}

  @media screen and (max-width: 768px) {
    .ai-split-section-container-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 40px;
    }

    .ai-split-section-categories-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.categories_per_row_mobile }}, 1fr);
      gap: 12px;
    }

    .ai-split-section-content-{{ ai_gen_id }} {
      padding: 40px 15px;
    }

    .ai-split-section-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }

    .ai-split-section-subheading-{{ ai_gen_id }} {
      font-size: {{ block.settings.subheading_size | times: 0.9 }}px;
    }

    .ai-split-section-bg-{{ ai_gen_id }}--fixed {
      background-attachment: scroll;
    }

    .ai-split-section-right-image-{{ ai_gen_id }} {
      min-height: 300px;
    }

    .ai-split-section-right-placeholder-{{ ai_gen_id }} {
      min-height: 300px;
    }

    {% if block.settings.enable_image_overflow %}
      .ai-split-section-category-image-{{ ai_gen_id }} img,
      .ai-split-section-category-placeholder-{{ ai_gen_id }} {
        transform: scale({{ block.settings.image_overflow_scale | times: 0.8 }});
      }
    {% endif %}

    @keyframes ai-float-{{ ai_gen_id }} {
      0%, 100% {
        transform: translateY(0px);
      }
      50% {
        transform: translateY(-{{ block.settings.float_intensity | times: 0.7 }}px);
      }
    }
  }
{% endstyle %}

<split-section-{{ ai_gen_id }}
  class="ai-split-section-{{ ai_gen_id }}"
  data-bg-effect="{{ block.settings.background_effect }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.background_image %}
    <div class="ai-split-section-bg-{{ ai_gen_id }} ai-split-section-bg-{{ ai_gen_id }}--{{ block.settings.background_effect }}">
      {% if block.settings.background_effect == 'fixed' %}
        <div
          style="
            background-image: url('{{ block.settings.background_image | image_url: width: 2000 }}');
            background-attachment: fixed;
            background-size: cover;
            background-repeat: no-repeat;
            background-position: {{ block.settings.image_alignment }};
            width: 100%;
            height: 100%;
          "
        ></div>
      {% else %}
        <img
          src="{{ block.settings.background_image | image_url: width: 2000 }}"
          alt="{{ block.settings.background_image.alt | escape }}"
          loading="lazy"
          width="{{ block.settings.background_image.width }}"
          height="{{ block.settings.background_image.height }}"
        >
      {% endif %}
    </div>
  {% endif %}

  <div class="ai-split-section-content-{{ ai_gen_id }}">
    <div class="ai-split-section-container-{{ ai_gen_id }}">
      <div class="ai-split-section-left-{{ ai_gen_id }}">
        {% if block.settings.heading != blank %}
          <h1 class="ai-split-section-heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h1>
        {% endif %}

        {% if block.settings.subheading != blank %}
          <h2 class="ai-split-section-subheading-{{ ai_gen_id }}">{{ block.settings.subheading }}</h2>
        {% endif %}

        {% if block.settings.description != blank %}
          <div class="ai-split-section-description-{{ ai_gen_id }}">{{ block.settings.description }}</div>
        {% endif %}

        {% if block.settings.show_categories %}
          <div class="ai-split-section-categories-{{ ai_gen_id }}">
            {% for i in (1..4) %}
              {% liquid
                assign category_enabled_key = 'enable_category_' | append: i
                assign category_key = 'category_' | append: i
                assign category_image_key = 'category_' | append: i | append: '_image'
                assign category_title_key = 'category_' | append: i | append: '_title'
                assign category_enabled = block.settings[category_enabled_key]
                assign category = block.settings[category_key]
                assign category_image = block.settings[category_image_key]
                assign category_title = block.settings[category_title_key]
              %}

              {% if category_enabled %}
                {% if category != blank or category_image != blank or category_title != blank %}
                  <a
                    href="{% if category != blank %}{{ category.url }}{% else %}#{% endif %}"
                    class="ai-split-section-category-{{ ai_gen_id }}{% if block.settings.enable_category_shadow %} ai-split-section-category-{{ ai_gen_id }}--shadow{% endif %}"
                  >
                    <div class="ai-split-section-category-image-{{ ai_gen_id }}">
                      {% if category_image %}
                        <img
                          src="{{ category_image | image_url: width: 200 }}"
                          alt="{{ category_image.alt | escape }}"
                          loading="lazy"
                          width="200"
                          height="80"
                        >
                      {% elsif category != blank and category.featured_image %}
                        <img
                          src="{{ category.featured_image | image_url: width: 200 }}"
                          alt="{{ category.featured_image.alt | escape }}"
                          loading="lazy"
                          width="200"
                          height="80"
                        >
                      {% else %}
                        <div class="ai-split-section-category-placeholder-{{ ai_gen_id }}">
                          {{ 'collection-apparel-1' | placeholder_svg_tag }}
                        </div>
                      {% endif %}
                    </div>
                    <h3 class="ai-split-section-category-title-{{ ai_gen_id }}">
                      {% if category_title != blank %}
                        {{ category_title }}
                      {% elsif category != blank %}
                        {{ category.title }}
                      {% else %}
                        Category {{ i }}
                      {% endif %}
                    </h3>
                  </a>
                {% else %}
                  <div class="ai-split-section-empty-category-{{ ai_gen_id }}">
                    Configure category {{ i }}
                  </div>
                {% endif %}
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}
      </div>

      <div class="ai-split-section-right-{{ ai_gen_id }}">
        <div class="ai-split-section-right-image-{{ ai_gen_id }}">
          {% if block.settings.right_image %}
            <img
              src="{{ block.settings.right_image | image_url: width: 800 }}"
              alt="{{ block.settings.right_image.alt | escape }}"
              loading="lazy"
              width="{{ block.settings.right_image.width }}"
              height="{{ block.settings.right_image.height }}"
            >
          {% else %}
            <div class="ai-split-section-right-placeholder-{{ ai_gen_id }}">
              {{ 'image' | placeholder_svg_tag }}
              <div class="ai-split-section-empty-state-{{ ai_gen_id }}">
                Add an image for the right side
              </div>
            </div>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</split-section-{{ ai_gen_id }}>

<script>
  (function() {
    class SplitSection{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.parallaxElement = null;
        this.bgEffect = this.dataset.bgEffect;
      }

      connectedCallback() {
        if (this.bgEffect === 'parallax') {
          this.initParallax();
        }
      }

      initParallax() {
        this.parallaxElement = this.querySelector('.ai-split-section-bg-{{ ai_gen_id }}');
        if (this.parallaxElement) {
          window.addEventListener('scroll', this.handleParallax.bind(this));
          this.handleParallax();
        }
      }

      handleParallax() {
        if (!this.parallaxElement) return;

        const rect = this.getBoundingClientRect();
        const scrolled = window.pageYOffset;
        const rate = scrolled * -0.5;

        if (rect.bottom >= 0 && rect.top <= window.innerHeight) {
          this.parallaxElement.style.transform = `translateY(${rate}px)`;
        }
      }

      disconnectedCallback() {
        if (this.bgEffect === 'parallax') {
          window.removeEventListener('scroll', this.handleParallax.bind(this));
        }
      }
    }

    customElements.define('split-section-{{ ai_gen_id }}', SplitSection{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Split hero section",
  "settings": [
    {
      "type": "header",
      "content": "Background"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background image"
    },
    {
      "type": "select",
      "id": "image_alignment",
      "label": "Background image alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "background_effect",
      "label": "Background effect",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "fixed",
          "label": "Fixed"
        },
        {
          "value": "parallax",
          "label": "Parallax"
        }
      ],
      "default": "none"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "select",
      "id": "content_alignment",
      "label": "Content alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Welcome to our store"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 80,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 48
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Discover our amazing products"
    },
    {
      "type": "range",
      "id": "subheading_size",
      "min": 14,
      "max": 40,
      "step": 1,
      "unit": "px",
      "label": "Subheading size",
      "default": 24
    },
    {
      "type": "color",
      "id": "subheading_color",
      "label": "Subheading color",
      "default": "#333333"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Browse through our carefully curated collection of products designed to meet your needs."
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 16
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Right side image"
    },
    {
      "type": "image_picker",
      "id": "right_image",
      "label": "Right side image"
    },
    {
      "type": "range",
      "id": "right_image_radius",
      "min": 0,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Image border radius",
      "default": 8
    },
    {
      "type": "checkbox",
      "id": "enable_float_animation",
      "label": "Enable floating animation",
      "default": true
    },
    {
      "type": "range",
      "id": "float_intensity",
      "min": 5,
      "max": 30,
      "step": 1,
      "unit": "px",
      "label": "Float intensity",
      "default": 15
    },
    {
      "type": "range",
      "id": "float_duration",
      "min": 2,
      "max": 8,
      "step": 1,
      "unit": "s",
      "label": "Float duration",
      "default": 4
    },
    {
      "type": "header",
      "content": "Categories"
    },
    {
      "type": "checkbox",
      "id": "show_categories",
      "label": "Show categories",
      "default": true
    },
    {
      "type": "select",
      "id": "categories_per_row",
      "label": "Categories per row",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        },
        {
          "value": "3",
          "label": "3"
        },
        {
          "value": "4",
          "label": "4"
        }
      ],
      "default": "2"
    },
    {
      "type": "select",
      "id": "categories_per_row_mobile",
      "label": "Categories per row on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    },
    {
      "type": "checkbox",
      "id": "enable_category_shadow",
      "label": "Enable category shadow",
      "default": true
    },
    {
      "type": "header",
      "content": "Category image overflow"
    },
    {
      "type": "checkbox",
      "id": "enable_image_overflow",
      "label": "Enable image overflow",
      "default": false
    },
    {
      "type": "range",
      "id": "image_overflow_scale",
      "min": 1,
      "max": 2,
      "step": 0.1,
      "label": "Image overflow scale",
      "default": 1.3
    },
    {
      "type": "select",
      "id": "image_overflow_direction",
      "label": "Overflow direction",
      "options": [
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        },
        {
          "value": "top-left",
          "label": "Top left"
        },
        {
          "value": "top-right",
          "label": "Top right"
        },
        {
          "value": "bottom-left",
          "label": "Bottom left"
        },
        {
          "value": "bottom-right",
          "label": "Bottom right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Category 1"
    },
    {
      "type": "checkbox",
      "id": "enable_category_1",
      "label": "Enable category 1",
      "default": true
    },
    {
      "type": "collection",
      "id": "category_1",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "category_1_image",
      "label": "Custom image"
    },
    {
      "type": "text",
      "id": "category_1_title",
      "label": "Custom title"
    },
    {
      "type": "header",
      "content": "Category 2"
    },
    {
      "type": "checkbox",
      "id": "enable_category_2",
      "label": "Enable category 2",
      "default": true
    },
    {
      "type": "collection",
      "id": "category_2",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "category_2_image",
      "label": "Custom image"
    },
    {
      "type": "text",
      "id": "category_2_title",
      "label": "Custom title"
    },
    {
      "type": "header",
      "content": "Category 3"
    },
    {
      "type": "checkbox",
      "id": "enable_category_3",
      "label": "Enable category 3",
      "default": false
    },
    {
      "type": "collection",
      "id": "category_3",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "category_3_image",
      "label": "Custom image"
    },
    {
      "type": "text",
      "id": "category_3_title",
      "label": "Custom title"
    },
    {
      "type": "header",
      "content": "Category 4"
    },
    {
      "type": "checkbox",
      "id": "enable_category_4",
      "label": "Enable category 4",
      "default": false
    },
    {
      "type": "collection",
      "id": "category_4",
      "label": "Collection"
    },
    {
      "type": "image_picker",
      "id": "category_4_image",
      "label": "Custom image"
    },
    {
      "type": "text",
      "id": "category_4_title",
      "label": "Custom title"
    },
    {
      "type": "header",
      "content": "Category style"
    },
    {
      "type": "color",
      "id": "category_bg_color",
      "label": "Background color",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "category_hover_bg_color",
      "label": "Hover background color",
      "default": "#e8e8e8"
    },
    {
      "type": "color",
      "id": "category_text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "category_hover_text_color",
      "label": "Hover text color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "category_border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "category_image_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Image border radius",
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Split hero section"
    }
  ]
}
{% endschema %}