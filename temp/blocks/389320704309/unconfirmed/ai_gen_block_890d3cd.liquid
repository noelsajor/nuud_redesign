{% doc %}
  @prompt
    I want to build frequently asked questions section where you have on the left side a Sub heading, heading and body. on the right side should be all questions aligned vertically with a dropdown icon that once you click on it allows you to see the answer of the clicked question

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-faq-section-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: {{ block.settings.section_gap }}px;
    padding: {{ block.settings.section_padding }}px;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
  }

  .ai-faq-content-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .ai-faq-subheading-{{ ai_gen_id }} {
    color: {{ block.settings.subheading_color }};
    font-size: {{ block.settings.subheading_size }}px;
    margin: 0;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 500;
  }

  .ai-faq-heading-{{ ai_gen_id }} {
    color: {{ block.settings.heading_color }};
    font-size: {{ block.settings.heading_size }}px;
    margin: 0;
    line-height: 1.2;
    font-weight: 700;
  }

  .ai-faq-body-{{ ai_gen_id }} {
    color: {{ block.settings.body_color }};
    font-size: {{ block.settings.body_size }}px;
    line-height: 1.6;
    margin: 0;
  }

  .ai-faq-questions-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: {{ block.settings.question_gap }}px;
  }

  .ai-faq-item-{{ ai_gen_id }} {
    border: 1px solid {{ block.settings.question_border_color }};
    border-radius: {{ block.settings.question_border_radius }}px;
    overflow: hidden;
    background-color: {{ block.settings.question_background }};
  }

  .ai-faq-question-button-{{ ai_gen_id }} {
    width: 100%;
    padding: {{ block.settings.question_padding }}px;
    background: none;
    border: none;
    text-align: left;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 16px;
    color: {{ block.settings.question_color }};
    font-size: {{ block.settings.question_size }}px;
    font-weight: 600;
    transition: background-color 0.3s ease;
  }

  .ai-faq-question-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.question_hover_background }};
  }

  .ai-faq-question-text-{{ ai_gen_id }} {
    flex-grow: 1;
  }

  .ai-faq-icon-{{ ai_gen_id }} {
    width: 20px;
    height: 20px;
    transition: transform 0.3s ease;
    color: {{ block.settings.icon_color }};
    flex-shrink: 0;
  }

  .ai-faq-item-{{ ai_gen_id }}.active .ai-faq-icon-{{ ai_gen_id }} {
    transform: rotate(180deg);
  }

  .ai-faq-answer-{{ ai_gen_id }} {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease, padding 0.3s ease;
    background-color: {{ block.settings.answer_background }};
  }

  .ai-faq-answer-content-{{ ai_gen_id }} {
    padding: 0 {{ block.settings.question_padding }}px;
    color: {{ block.settings.answer_color }};
    font-size: {{ block.settings.answer_size }}px;
    line-height: 1.6;
  }

  .ai-faq-item-{{ ai_gen_id }}.active .ai-faq-answer-{{ ai_gen_id }} {
    max-height: 500px;
    padding: {{ block.settings.answer_padding }}px0;
  }

  @media screen and (max-width: 768px) {
    .ai-faq-section-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: {{ block.settings.mobile_gap }}px;
    }

    .ai-faq-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }

    .ai-faq-question-button-{{ ai_gen_id }} {
      padding: {{ block.settings.question_padding | times: 0.8 }}px;
    }
  }
{% endstyle %}

<faq-section-{{ ai_gen_id }} class="ai-faq-section-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-faq-content-{{ ai_gen_id }}">
    {% if block.settings.subheading != blank %}
      <h3 class="ai-faq-subheading-{{ ai_gen_id }}">{{ block.settings.subheading }}</h3>
    {% endif %}
    
    {% if block.settings.heading != blank %}
      <h2 class="ai-faq-heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    {% endif %}
    
    {% if block.settings.body != blank %}
      <div class="ai-faq-body-{{ ai_gen_id }}">{{ block.settings.body }}</div>
    {% endif %}
  </div>

  <div class="ai-faq-questions-{{ ai_gen_id }}">
    {% for i in (1..6) %}
      {% assign question_key = 'question_' | append: i %}
      {% assign answer_key = 'answer_' | append: i %}
      {% assign question = block.settings[question_key] %}
      {% assign answer = block.settings[answer_key] %}
      {% if question != blank and answer != blank %}
        <div class="ai-faq-item-{{ ai_gen_id }}" data-faq-item="{{ i }}">
          <button 
            class="ai-faq-question-button-{{ ai_gen_id }}"
            aria-expanded="false"
            aria-controls="ai-faq-answer-{{ ai_gen_id }}-{{ i }}"
          >
            <span class="ai-faq-question-text-{{ ai_gen_id }}">{{ question }}</span>
            <svg class="ai-faq-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="6,9 12,15 18,9"></polyline>
            </svg>
          </button>
          <div 
            class="ai-faq-answer-{{ ai_gen_id }}"
            id="ai-faq-answer-{{ ai_gen_id }}-{{ i }}"
            aria-hidden="true"
          >
            <div class="ai-faq-answer-content-{{ ai_gen_id }}">{{ answer }}</div>
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</faq-section-{{ ai_gen_id }}>

<script>
  (function() {
    class FaqSection{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.setupEventListeners();
      }

      setupEventListeners() {
        const faqItems = this.querySelectorAll('.ai-faq-item-{{ ai_gen_id }}');
        
        faqItems.forEach(item => {
          const button = item.querySelector('.ai-faq-question-button-{{ ai_gen_id }}');
          const answer = item.querySelector('.ai-faq-answer-{{ ai_gen_id }}');
          
          button.addEventListener('click', () => {
            const isActive = item.classList.contains('active');
            
            if (isActive) {
              this.closeItem(item, button, answer);
            } else {
              this.openItem(item, button, answer);
            }
          });
        });
      }

      openItem(item, button, answer) {
        item.classList.add('active');
        button.setAttribute('aria-expanded', 'true');
        answer.setAttribute('aria-hidden', 'false');
      }

      closeItem(item, button, answer) {
        item.classList.remove('active');
        button.setAttribute('aria-expanded', 'false');
        answer.setAttribute('aria-hidden', 'true');
      }
    }

    customElements.define('faq-section-{{ ai_gen_id }}', FaqSection{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "FAQ section",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "FAQ"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Frequently Asked Questions"
    },
    {
      "type": "richtext",
      "id": "body",
      "label": "Body text",
      "default": "<p>Find answers to the most common questions about our products and services.</p>"
    },
    {
      "type": "header",
      "content": "Questions"
    },
    {
      "type": "text",
      "id": "question_1",
      "label": "Question 1",
      "default": "What is your return policy?"
    },
    {
      "type": "richtext",
      "id": "answer_1",
      "label": "Answer 1",
      "default": "<p>We offer a 30-day return policy for all unused items in their original packaging.</p>"
    },
    {
      "type": "text",
      "id": "question_2",
      "label": "Question 2",
      "default": "How long does shipping take?"
    },
    {
      "type": "richtext",
      "id": "answer_2",
      "label": "Answer 2",
      "default": "<p>Standard shipping takes 3-5 business days. Express shipping is available for 1-2 business days.</p>"
    },
    {
      "type": "text",
      "id": "question_3",
      "label": "Question 3",
      "default": "Do you offer international shipping?"
    },
    {
      "type": "richtext",
      "id": "answer_3",
      "label": "Answer 3",
      "default": "<p>Yes, we ship to most countries worldwide. Shipping costs and delivery times vary by location.</p>"
    },
    {
      "type": "text",
      "id": "question_4",
      "label": "Question 4"
    },
    {
      "type": "richtext",
      "id": "answer_4",
      "label": "Answer 4"
    },
    {
      "type": "text",
      "id": "question_5",
      "label": "Question 5"
    },
    {
      "type": "richtext",
      "id": "answer_5",
      "label": "Answer 5"
    },
    {
      "type": "text",
      "id": "question_6",
      "label": "Question 6"
    },
    {
      "type": "richtext",
      "id": "answer_6",
      "label": "Answer 6"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "section_padding",
      "label": "Section padding",
      "min": 20,
      "max": 80,
      "step": 5,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "section_gap",
      "label": "Gap between content and questions",
      "min": 20,
      "max": 80,
      "step": 5,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "mobile_gap",
      "label": "Mobile gap",
      "min": 15,
      "max": 50,
      "step": 5,
      "unit": "px",
      "default": 30
    },
    {
      "type": "range",
      "id": "question_gap",
      "label": "Gap between questions",
      "min": 5,
      "max": 30,
      "step": 1,
      "unit": "px",
      "default": 12
    },
    {
      "type": "range",
      "id": "question_padding",
      "label": "Question padding",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "default": 20
    },
    {
      "type": "range",
      "id": "answer_padding",
      "label": "Answer padding",
      "min": 10,
      "max": 30,
      "step": 2,
      "unit": "px",
      "default": 20
    },
    {
      "type": "range",
      "id": "border_radius",
      "label": "Section border radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "default": 8
    },
    {
      "type": "range",
      "id": "question_border_radius",
      "label": "Question border radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "default": 6
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "subheading_color",
      "label": "Subheading",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "body_color",
      "label": "Body text",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "question_background",
      "label": "Question background",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "question_hover_background",
      "label": "Question hover background",
      "default": "#f0f0f0"
    },
    {
      "type": "color",
      "id": "question_color",
      "label": "Question text",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "question_border_color",
      "label": "Question border",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "answer_background",
      "label": "Answer background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "answer_color",
      "label": "Answer text",
      "default": "#555555"
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Icon",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "subheading_size",
      "label": "Subheading size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "default": 14
    },
    {
      "type": "range",
      "id": "heading_size",
      "label": "Heading size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "default": 36
    },
    {
      "type": "range",
      "id": "body_size",
      "label": "Body text size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "default": 16
    },
    {
      "type": "range",
      "id": "question_size",
      "label": "Question text size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "default": 16
    },
    {
      "type": "range",
      "id": "answer_size",
      "label": "Answer text size",
      "min": 14,
      "max": 20,
      "step": 1,
      "unit": "px",
      "default": 15
    }
  ],
  "presets": [
    {
      "name": "FAQ section"
    }
  ]
}
{% endschema %}